<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小牛之家</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-18T07:11:07.535Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wcs</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ts 实现混合类</title>
    <link href="http://yoursite.com/2019/10/18/ts-%E5%AE%9E%E7%8E%B0%E6%B7%B7%E5%90%88%E7%B1%BB/"/>
    <id>http://yoursite.com/2019/10/18/ts-实现混合类/</id>
    <published>2019-10-18T07:05:47.000Z</published>
    <updated>2019-10-18T07:11:07.535Z</updated>
    
    <content type="html"><![CDATA[<p>ts混合类特性</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mammal</span></span>&#123;</span><br><span class="line">    breathe():string&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"I'm alive!"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WingedAnimal</span> </span>&#123;</span><br><span class="line">    fly() :string&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"I can fly!"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bat</span> <span class="title">implements</span> <span class="title">Mammal</span>,<span class="title">WingedAnimal</span></span>&#123;</span><br><span class="line">    breathe:<span class="function"><span class="params">()</span>=&gt;</span>string;</span><br><span class="line">    fly: <span class="function"><span class="params">()</span> =&gt;</span> string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">applyMixins</span>(<span class="params">derivedCtor:any,baseCtors:any[]</span>)</span>&#123;</span><br><span class="line">    baseCtors.forEach(<span class="function"><span class="params">baseCtor</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.getOwnPropertyNames(baseCtor.prototype).forEach(<span class="function"><span class="params">name</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(name!==<span class="string">'constructor'</span>)&#123;</span><br><span class="line">                derivedCtor.prototype[name]=baseCtor.prototype[name];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">applyMixins(Bat,[Mammal,WingedAnimal])</span><br><span class="line"><span class="keyword">var</span> bat=<span class="keyword">new</span> Bat();</span><br><span class="line"><span class="built_in">console</span>.log(bat.breathe());</span><br><span class="line"><span class="built_in">console</span>.log(bat.fly());</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ts混合类特性&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="typescript" scheme="http://yoursite.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>es6 模板字符串</title>
    <link href="http://yoursite.com/2017/07/27/es6-%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://yoursite.com/2017/07/27/es6-模板字符串/</id>
    <published>2017-07-27T02:02:14.000Z</published>
    <updated>2019-10-18T03:40:31.362Z</updated>
    
    <content type="html"><![CDATA[<p>es6 新的特殊支持嵌入表达式，自动会处于``内所有的字符串。</p><a id="more"></a><h3 id="多行字符串"><a href="#多行字符串" class="headerlink" title="多行字符串"></a>多行字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\\传统的多行字符串</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'string line1 \n\</span></span><br><span class="line"><span class="string">string line2'</span>)</span><br><span class="line">\\es6多行字符串</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`string line</span></span><br><span class="line"><span class="string">string lin2`</span>);</span><br></pre></td></tr></table></figure><h3 id="表达式插入"><a href="#表达式插入" class="headerlink" title="表达式插入"></a>表达式插入</h3><p>传统的方式采用的是字符串拼接的方式进行，通过+号进行拼接</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传统方式</span></span><br><span class="line"> <span class="keyword">let</span> x=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">let</span> y=<span class="number">2</span>;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'x='</span>+(a+b)+<span class="string">';y='</span>+(a*b))</span><br><span class="line"> <span class="comment">//es6 语法</span></span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'x='</span>+(a+b)+<span class="string">';y='</span>+(a*b));</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">`x=<span class="subst">$&#123;x+y&#125;</span>,y=<span class="subst">$&#123;x*y&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><h3 id="带标签的模板字符串"><a href="#带标签的模板字符串" class="headerlink" title="带标签的模板字符串"></a>带标签的模板字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//strings 存放所有的字符串字面的数组</span></span><br><span class="line"><span class="comment">//values 存放第一个数组紧随的参数</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">tag3</span>(<span class="params">strings,...values</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">let</span> a = <span class="number">5</span>;</span><br><span class="line">  <span class="keyword">let</span> b = <span class="number">10</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(strings[<span class="number">0</span>]);<span class="comment">//hello</span></span><br><span class="line">                <span class="built_in">console</span>.log(strings[<span class="number">1</span>]);<span class="comment">//world</span></span><br><span class="line">                <span class="built_in">console</span>.log(strings[<span class="number">2</span>]);<span class="comment">//</span></span><br><span class="line">                <span class="built_in">console</span>.log(values[<span class="number">0</span>]);<span class="comment">//15</span></span><br><span class="line">                <span class="built_in">console</span>.log(values[<span class="number">1</span>]);<span class="comment">//50</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">"hello world"</span></span><br><span class="line"> &#125;</span><br><span class="line">  tag3 <span class="string">`Hello <span class="subst">$&#123;a+b&#125;</span> world <span class="subst">$&#123; a*b &#125;</span>`</span>;</span><br><span class="line">  <span class="comment">//out:hello world</span></span><br></pre></td></tr></table></figure><p>通过传入的参数来返回一个函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">template</span>(<span class="params">strings,...keys</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params">...values</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> dict=values[values.length<span class="number">-1</span>]||&#123;&#125;;  <span class="comment">//A                 </span></span><br><span class="line"><span class="keyword">var</span> result=[strings[<span class="number">0</span>]];</span><br><span class="line">keys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key,i</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> value=<span class="built_in">Number</span>.isInteger(key)?values[key]:dict[key];              result.push(value,strings[i+<span class="number">1</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> result.join(<span class="string">' '</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> t1Closure=template <span class="string">`<span class="subst">$&#123;<span class="number">0</span>&#125;</span><span class="subst">$&#123;<span class="number">1</span>&#125;</span><span class="subst">$&#123;<span class="number">0</span>&#125;</span>!`</span>;<span class="comment">//返回的是一个函数</span></span><br><span class="line"><span class="built_in">console</span>.log(t1Closure(<span class="string">'Y'</span>,<span class="string">'A'</span>));<span class="comment">//Y A Y</span></span><br></pre></td></tr></table></figure><h3 id="不转义字符串"><a href="#不转义字符串" class="headerlink" title="不转义字符串"></a>不转义字符串</h3><p>在String.raw()输出不转义的字符串,输出原始的字符串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tag</span>(<span class="params">strings, ...values</span>) </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">倘若不采用raw输出的会直接进行换行 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  <span class="built_in">console</span>.log(strings.raw[<span class="number">0</span>]); </span><br><span class="line">  <span class="comment">// "string text line 1 \n string text line 2"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tag<span class="string">`string text line 1 \n string text line 2`</span>;</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否具有权限，倘若没有抛出一个异常</span></span><br><span class="line"><span class="comment">//$&#123;user.name&#125;和$&#123;action&#125;是两个点占位号，会自动将值带入到该字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">authorize</span>(<span class="params">user, action</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!user.hasPrivilege(action)) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(</span><br><span class="line">      <span class="string">`用户 <span class="subst">$&#123;user.name&#125;</span> 未被授权执行 <span class="subst">$&#123;action&#125;</span> 操作。`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;es6 新的特殊支持嵌入表达式，自动会处于``内所有的字符串。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>meteor 加载静态文件</title>
    <link href="http://yoursite.com/2017/07/27/meteor-%E5%8A%A0%E8%BD%BD%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/07/27/meteor-加载静态文件/</id>
    <published>2017-07-27T01:54:17.000Z</published>
    <updated>2019-10-18T04:50:46.119Z</updated>
    
    <content type="html"><![CDATA[<p>meteor 加载静态文件</p><a id="more"></a><h1 id="meteor-加载外部资源文件"><a href="#meteor-加载外部资源文件" class="headerlink" title="meteor 加载外部资源文件"></a>meteor 加载外部资源文件</h1><p>在很多时候开发的时候我们需要导入一些外部的数据到程序当中，这些数据可能存放在csv,XML.json之类的文件当中，我们就将其导入到程序当中，使其能够供全局进行访问。</p><p><strong>private/json/city.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"010"</span>,<span class="attr">"city"</span>:<span class="string">"北京"</span>, <span class="attr">"pinyin"</span>: <span class="string">"beijing"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"021"</span>,<span class="attr">"city"</span>:<span class="string">"上海"</span>, <span class="attr">"pinyin"</span>:<span class="string">"shanghai"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0571"</span>,<span class="attr">"city"</span>:<span class="string">"杭州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"hangzhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0574"</span>,<span class="attr">"city"</span>:<span class="string">"宁波"</span>, <span class="attr">"pinyin"</span>:<span class="string">"ningbo"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0573"</span>,<span class="attr">"city"</span>:<span class="string">"嘉兴"</span>, <span class="attr">"pinyin"</span>:<span class="string">"jiaxing"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0575"</span>,<span class="attr">"city"</span>:<span class="string">"绍兴"</span>, <span class="attr">"pinyin"</span>:<span class="string">"shaoxing"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0577"</span>,<span class="attr">"city"</span>:<span class="string">"温州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"wenzhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0580"</span>,<span class="attr">"city"</span>:<span class="string">"舟山"</span>, <span class="attr">"pinyin"</span>:<span class="string">"zhoushan"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0572"</span>,<span class="attr">"city"</span>:<span class="string">"湖州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"huzhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0579"</span>,<span class="attr">"city"</span>:<span class="string">"金华"</span>, <span class="attr">"pinyin"</span>:<span class="string">"jinhua"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0578"</span>,<span class="attr">"city"</span>:<span class="string">"丽水"</span>, <span class="attr">"pinyin"</span>:<span class="string">"lishui"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0576"</span>,<span class="attr">"city"</span>:<span class="string">"台州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"taizhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0570"</span>,<span class="attr">"city"</span>:<span class="string">"衢州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"quzhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> ]</span><br></pre></td></tr></table></figure><blockquote><p>特殊注意是private文件夹的数据是不提供给客户端</p></blockquote><p>上面的是包含城市名称以及区号的json数据，我们将其保存在文件当中，这里我们可以通过Assets API来访问以及处理相应的数据。</p><p><strong>server/main.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Meteor &#125; <span class="keyword">from</span> <span class="string">'meteor/meteor'</span>;</span><br><span class="line"></span><br><span class="line">Meteor.startup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> cityList=<span class="built_in">JSON</span>.parse(Assets.getText(<span class="string">'json/city.json'</span>))</span><br><span class="line">  _.each(cityList, <span class="function"><span class="keyword">function</span>(<span class="params">city</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(city);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面的代码会将所有的数据进行输出，但是有的时候这些数据可以会被其他的项目需要，这里我们需要通过添加一个package来解决，同时我们只可以将这个包上传到<a href="https://atmospherejs.com" target="_blank" rel="noopener">atmospherejs</a><br>我们需要将之前的json文件移到cityjson包，最终的目录文件如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">└── cityjson</span><br><span class="line">    ├── README.md</span><br><span class="line">    ├── city.json</span><br><span class="line">    ├── cityjson-tests.js</span><br><span class="line">    ├── cityjson.js</span><br><span class="line">    └── package.js</span><br></pre></td></tr></table></figure><p><strong>package.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Package.describe(&#123;</span><br><span class="line">  name: <span class="string">'wenchangshou:cityjson'</span>,</span><br><span class="line">  version: <span class="string">'0.0.1'</span>,</span><br><span class="line">  <span class="comment">// Brief, one-line summary of the package.</span></span><br><span class="line">  summary: <span class="string">'获取国内的所有的城市名称以及区号'</span>,</span><br><span class="line">  <span class="comment">// URL to the Git repository containing the source code for this package.</span></span><br><span class="line">  git: <span class="string">''</span>,</span><br><span class="line">  <span class="comment">// By default, Meteor will default to using README.md for documentation.</span></span><br><span class="line">  <span class="comment">// To avoid submitting documentation, set this field to null.</span></span><br><span class="line">  documentation: <span class="string">'README.md'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Package.onUse(<span class="function"><span class="keyword">function</span> (<span class="params">api</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//  api.versionsFrom('1.4.2.7');</span></span><br><span class="line">  api.versionsFrom(<span class="string">'1.0'</span>)</span><br><span class="line">  api.export(<span class="string">'cityList'</span>, <span class="string">'server'</span>);</span><br><span class="line">  api.addAssets(<span class="string">'city.json'</span>, <span class="string">'server'</span>)</span><br><span class="line">  api.addFiles(<span class="string">'cityjson.js'</span>, <span class="string">'server'</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Package.onTest(<span class="function"><span class="keyword">function</span>(<span class="params">api</span>) </span>&#123;</span><br><span class="line">  api.use(<span class="string">'ecmascript'</span>);</span><br><span class="line">  api.use(<span class="string">'tinytest'</span>);</span><br><span class="line">  api.use(<span class="string">'wenchangshou:cityjson'</span>);</span><br><span class="line">  api.mainModule(<span class="string">'cityjson-tests.js'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>cityjson.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cityCollection=<span class="built_in">JSON</span>.parse(Assets.getText(<span class="string">'city.json'</span>));</span><br><span class="line">cityList=&#123;<span class="attr">city</span>:cityCollection&#125;</span><br></pre></td></tr></table></figure><ul><li>Assets.getText 可以从当前的包内进行调用 ，通过addFiles进行数据的暴露</li><li>之后我们需要读取以及解析数据，city里面包含了所有的城市信息，并且我们通过cityList这个全局变量进行数据的暴露</li><li>我们通过 api.addAssets将静态的文件导入到包中，通过Assets.getText进行访问</li></ul><h3 id="meteor-包上传"><a href="#meteor-包上传" class="headerlink" title="meteor 包上传"></a>meteor 包上传</h3><p>上面的操作我们已经创建了一个能够使用的包了，这时候我们需要将这个包上传，方便将来的使用</p><blockquote><p>meteor publish –create </p></blockquote><p>上传成功之后我们可以直接访问<a href="https://atmospherejs.com/wenchangshou/cityjson" target="_blank" rel="noopener">cityjson</a>来查看我们上传的包，如下图所示<br>![屏幕快照 2017-02-18 下午5.37.22](<a href="http://o7ez1faxc.bkt.clouddn.com/2017-02-18-屏幕快照" target="_blank" rel="noopener">http://o7ez1faxc.bkt.clouddn.com/2017-02-18-屏幕快照</a> 2017-02-18 下午5.37.22.png)</p><p>上传成功之后我们将pckages/cityjson目录删除</p><blockquote><p>rm -rf packages/cityjson</p></blockquote><p>我们在主目录当中添加我们上传的包,其中wenchangshou是我的用户名</p><blockquote><p>meteor add wenchangshou:cityjson</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;meteor 加载静态文件&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
</feed>
