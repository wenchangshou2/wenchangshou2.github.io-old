<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小牛之家</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-18T08:33:29.222Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wcs</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python-爬虫-下载豆瓣歌单</title>
    <link href="http://yoursite.com/2019/10/18/python-%E7%88%AC%E8%99%AB-%E4%B8%8B%E8%BD%BD%E8%B1%86%E7%93%A3%E6%AD%8C%E5%8D%95/"/>
    <id>http://yoursite.com/2019/10/18/python-爬虫-下载豆瓣歌单/</id>
    <published>2019-10-18T07:37:52.000Z</published>
    <updated>2019-10-18T08:33:29.222Z</updated>
    
    <content type="html"><![CDATA[<p>多线程下载douban歌单，BeautifulSoup解析标签</p><a id="more"></a><p>运行的时候输入歌单的网址：<a href="https://music.douban.com/programme/9574867?sid=#play" target="_blank" rel="noopener">https://music.douban.com/programme/9574867?sid=#play</a> ，爬虫会自动抓取页面中所有音乐的下载链接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> simplejson <span class="keyword">as</span> json</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">myQueue=queue.Queue()</span><br><span class="line">MusicList=[]</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Music</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,title,DownUri)</span>:</span></span><br><span class="line">        self.title=title</span><br><span class="line">        self.DownUri=DownUri</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,records, page_num)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self, name=page_num)</span><br><span class="line">        self._records =records</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span>(self._records.qsize()):</span><br><span class="line">            <span class="comment">#page=read_page(url,self._records.get())</span></span><br><span class="line">            <span class="comment">#read_tag(page,tag)</span></span><br><span class="line">            ll=self._records.get()</span><br><span class="line">            print(ll.title,<span class="string">"正在下载"</span>)</span><br><span class="line">            DownMusicFile(ll.DownUri,ll.title)</span><br><span class="line">            print(ll.title,<span class="string">"下载完成"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Resulturi</span><span class="params">(songid,ssid)</span>:</span></span><br><span class="line">    uri=<span class="string">'https://music.douban.com/j/songlist/get_song_url?sid=%s&amp;ssid=%s'</span>%(songid,ssid)</span><br><span class="line">    content=json.loads(requests.session().get(uri).content)[<span class="string">'r'</span>]</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetDown</span><span class="params">(MusicUri)</span>:</span></span><br><span class="line">    page=requests.session().get(MusicUri)</span><br><span class="line">    content=page.content</span><br><span class="line">    soup=BeautifulSoup(content,<span class="string">"html5lib"</span>)</span><br><span class="line">    link = soup.find_all(<span class="string">"div"</span>,<span class="string">"song-item"</span>)</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> link:</span><br><span class="line">        <span class="comment">#print(i['data-index'],i['data-title'],i['data-performer'],i['data-songid'],i['data-ssid'])</span></span><br><span class="line">        DownUri=Resulturi(s[<span class="string">'data-songid'</span>],s[<span class="string">'data-ssid'</span>])</span><br><span class="line">        tmp=Music(s[<span class="string">'data-title'</span>],DownUri)</span><br><span class="line">        myQueue.put(tmp)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DownMusicFile</span><span class="params">(uri,title)</span>:</span></span><br><span class="line">    r=requests.get(uri,stream=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">with</span> open(os.getcwd()+<span class="string">'/'</span>+title+<span class="string">".mp4"</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> fd:</span><br><span class="line">        <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content():</span><br><span class="line">            fd.write(chunk)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reptile</span><span class="params">(records,threadNum)</span>:</span></span><br><span class="line">    tasks=[]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> page_num <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        Thread=MyThread(records,page_num)</span><br><span class="line">        Thread.setDaemon(<span class="literal">False</span>)</span><br><span class="line">        Thread.start()</span><br><span class="line">        tasks.append(Thread)</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        <span class="keyword">if</span> task.isAlive():</span><br><span class="line">            tasks.append(task)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    MusicUri=input(<span class="string">"请输入需要下载的专辑网址"</span>)</span><br><span class="line">    GetDown(MusicUri)</span><br><span class="line">    reptile(myQueue,<span class="number">10</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多线程下载douban歌单，BeautifulSoup解析标签&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>mysql 自动化脚本</title>
    <link href="http://yoursite.com/2019/10/18/mysql-%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/"/>
    <id>http://yoursite.com/2019/10/18/mysql-自动化脚本/</id>
    <published>2019-10-18T07:27:06.000Z</published>
    <updated>2019-10-18T07:36:43.518Z</updated>
    
    <content type="html"><![CDATA[<p>shell写的一个mysql自动初始化脚本</p><a id="more"></a><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/ash</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">USER=<span class="string">"root"</span></span><br><span class="line">NEWUSER=<span class="string">"xxx"</span></span><br><span class="line">PASSWORD=<span class="string">"xxxx"</span></span><br><span class="line">NEWPASSWORD=<span class="string">"xxxxxxxxxx"</span></span><br><span class="line">DATE=`date +%Y/%m/%d`</span><br><span class="line">OUTPUT=<span class="string">"/mnt/data/database/<span class="variable">$DATE</span>"</span></span><br><span class="line">OPERATOR=<span class="string">"export"</span></span><br><span class="line">FILES=<span class="string">"/tmp/database/*"</span></span><br><span class="line">DATABASEPATH=<span class="string">"/mnt/db/mysql"</span></span><br><span class="line">TMPPATH=<span class="string">"/mnt/db/tmp"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$OUTPUT</span></span><br><span class="line">[ ! -d <span class="string">"<span class="variable">$OUTPUT</span>"</span> ] &amp;&amp; &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"mkdir <span class="variable">$OUTPUT</span>"</span></span><br><span class="line">    mkdir -p <span class="variable">$OUTPUT</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#数据为初始化</span></span><br><span class="line"><span class="function"><span class="title">action_init</span></span>()&#123;</span><br><span class="line">    flag=$(uci get -q system.@general[0].databaseinit)</span><br><span class="line">    [ ! -z <span class="string">"<span class="variable">$flag</span>"</span> ] &amp;&amp; <span class="built_in">return</span></span><br><span class="line">[  -z <span class="string">"<span class="variable">$flag</span>"</span> ] &amp;&amp; &#123;</span><br><span class="line">        section=$(uci get -q system.@general[0])</span><br><span class="line">[ -z <span class="string">"<span class="variable">$section</span>"</span> ] &amp;&amp;&#123;</span><br><span class="line">uci add system general</span><br><span class="line">&#125;</span><br><span class="line">uci <span class="built_in">set</span> system.@general[0].databaseinit=1</span><br><span class="line">        uci commit system</span><br><span class="line">&#125;</span><br><span class="line">    [ -d <span class="string">"<span class="variable">$DATABASEPATH</span>"</span> ] &amp;&amp; rm -rf <span class="variable">$DATABASEPATH</span></span><br><span class="line">    [ -d <span class="string">"<span class="variable">$TMPPATH</span>"</span> ] &amp;&amp; rm -rf <span class="variable">$TMPPATH</span></span><br><span class="line">    sed -i <span class="string">"s,^datadir.*,datadir         = \"<span class="variable">$DATABASEPATH</span>\",g"</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s,^tmpdir.*,tmpdir          = "/mnt/db/tmp",g'</span> /etc/my.cnf</span><br><span class="line">    [ ! -d <span class="string">"<span class="variable">$DATABASEPATH</span>"</span> ] &amp;&amp; mkdir -p <span class="variable">$DATABASEPATH</span></span><br><span class="line">    [ ! -d <span class="string">"<span class="variable">$TMPPATH</span>"</span> ] &amp;&amp; mkdir -p <span class="variable">$TMPPATH</span></span><br><span class="line">    mysql_install_db --force</span><br><span class="line">    /etc/init.d/mysqld start</span><br><span class="line">    /etc/init.d/mysqld <span class="built_in">enable</span></span><br><span class="line">    mysqladmin -u  <span class="variable">$USER</span> password <span class="string">"<span class="variable">$PASSWORD</span>"</span></span><br><span class="line">    [ -f /tmp/adduser.sql ] &amp;&amp; rm -rf /tmp/adduser.sql</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"insert into mysql.user(Host,User,Password) values(\"localhost\",\"<span class="variable">$NEWUSER</span>\",password(\"<span class="variable">$NEWPASSWORD</span>\"));"</span>&gt;/tmp/adduser.sql</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"GRANT ALL PRIVILEGES ON *.* TO \"<span class="variable">$NEWUSER</span>\"@\"localhost\" IDENTIFIED BY \"<span class="variable">$NEWPASSWORD</span>\"; "</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"GRANT ALL PRIVILEGES ON *.* TO \"<span class="variable">$NEWUSER</span>\"@\"localhost\" IDENTIFIED BY \"<span class="variable">$NEWPASSWORD</span>\"; "</span>&gt;&gt;/tmp/adduser.sql</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"flush privileges;"</span>&gt;&gt;/tmp/adduser.sql</span><br><span class="line">    mysql -u <span class="variable">$USER</span> -p<span class="variable">$PASSWORD</span> &lt; /tmp/adduser.sql</span><br><span class="line">    rm -rf /tmp/adduser.sql</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#数据库导出</span></span><br><span class="line"><span class="function"><span class="title">action_export</span></span>()&#123;</span><br><span class="line">    databases=`mysql -u <span class="variable">$USER</span> -p<span class="variable">$PASSWORD</span> -e <span class="string">"SHOW DATABASES;"</span> | tr -d <span class="string">"| "</span> | grep -v Database`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"backup start"</span></span><br><span class="line">    <span class="keyword">for</span> db <span class="keyword">in</span> <span class="variable">$databases</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$db</span>"</span> != <span class="string">"information_schema"</span> ]] &amp;&amp; [[ <span class="string">"<span class="variable">$db</span>"</span> != <span class="string">"performance_schema"</span> ]] &amp;&amp; [[ <span class="string">"<span class="variable">$db</span>"</span> != <span class="string">"mysql"</span> ]] &amp;&amp; [[ <span class="string">"<span class="variable">$db</span>"</span> != _* ]] ; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"Dumping database: <span class="variable">$db</span>"</span></span><br><span class="line">            [ -f <span class="variable">$OUTPUT</span>/`date +%Y%m%d`.<span class="variable">$db</span>.sql ] &amp;&amp; &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"rm sql file"</span></span><br><span class="line">                rm -rf <span class="variable">$OUTPUT</span>/`date +%Y%m%d`.<span class="variable">$db</span>.sql</span><br><span class="line">            &#125;</span><br><span class="line">            mysqldump -u <span class="variable">$NEWUSER</span> -p<span class="variable">$NEWPASSWORD</span> --databases <span class="variable">$db</span> &gt; <span class="variable">$OUTPUT</span>/`date +%Y%m%d`.<span class="variable">$db</span>.sql</span><br><span class="line">            [ -f <span class="variable">$OUTPUT</span>/`date +%Y%m%d`.<span class="variable">$db</span>.sql.gz ] &amp;&amp; &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"rm file"</span></span><br><span class="line">                rm -rf <span class="variable">$OUTPUT</span>/`date +%Y%m%d`.<span class="variable">$db</span>.sql.gz</span><br><span class="line">            &#125;</span><br><span class="line">            gzip <span class="variable">$OUTPUT</span>/`date +%Y%m%d`.<span class="variable">$db</span>.sql</span><br><span class="line">            rm -rf <span class="variable">$OUTPUT</span>/`date +%Y%m%d`.<span class="variable">$db</span>.sql</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"backup end"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#数据库导入</span></span><br><span class="line"><span class="function"><span class="title">action_import</span></span>()&#123;</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$FILES</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        [ -f <span class="string">"<span class="variable">$f</span>"</span> ] &amp;&amp;&#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"Processing <span class="variable">$f</span> file..."</span></span><br><span class="line">            mysql -u <span class="variable">$NEWUSER</span> -p<span class="variable">$NEWPASSWORD</span> &lt; <span class="variable">$f</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line">[ ! -z <span class="string">"<span class="variable">$1</span>"</span> ] &amp;&amp; OPERATOR=<span class="variable">$1</span></span><br><span class="line">[ ! -z <span class="string">"<span class="variable">$2</span>"</span> ] &amp;&amp; USER=<span class="variable">$2</span></span><br><span class="line">[ ! -z <span class="string">"<span class="variable">$3</span>"</span> ] &amp;&amp; PASSWORD=<span class="variable">$3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$OPERATOR</span>"</span> == <span class="string">"export"</span> ]; <span class="keyword">then</span></span><br><span class="line">    action_export</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$OPERATOR</span>"</span> == <span class="string">"import"</span> ]; <span class="keyword">then</span></span><br><span class="line">    action_import</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$OPERATOR</span>"</span> == <span class="string">"init"</span> ]; <span class="keyword">then</span></span><br><span class="line">    action_init</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;shell写的一个mysql自动初始化脚本&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Raspberry Pi 使用DS18B20温度传感器</title>
    <link href="http://yoursite.com/2019/10/18/Raspberry-Pi-%E4%BD%BF%E7%94%A8DS18B20%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    <id>http://yoursite.com/2019/10/18/Raspberry-Pi-使用DS18B20温度传感器/</id>
    <published>2019-10-18T07:25:43.000Z</published>
    <updated>2019-10-18T07:28:21.232Z</updated>
    
    <content type="html"><![CDATA[<p>raspberry 温度采集</p><a id="more"></a><h1 id="DS18B20-温度传感器"><a href="#DS18B20-温度传感器" class="headerlink" title="DS18B20 温度传感器"></a>DS18B20 温度传感器</h1><p>最近心血来潮的想要折腾raspberry，所以就买了一堆的传感器，现在主要讲解温度传感器的使用。</p><p>![屏幕快照 2017-05-29 下午10.31.39](<a href="http://7xrkms.com1.z0.glb.clouddn.com/屏幕快照" target="_blank" rel="noopener">http://7xrkms.com1.z0.glb.clouddn.com/屏幕快照</a> 2017-05-29 下午10.31.39.png)</p><p><img src="http://7xrkms.com1.z0.glb.clouddn.com/14960683305689.png" alt=""></p><p>Pin1(GND)接到 P1-06(GND)<br>Pin2(DQ)接到 P1-07(GPIO4)<br>Pin3(VCC)接到P1-01(3.3v)</p><p>为了能够让系统正确的识别传感器，我们需要对<strong>/boot/config.txt</strong>文件进行编辑</p><blockquote><p>sudo vim /boot/config.txt</p></blockquote><p>在文件的未必添加下面的语句</p><blockquote><p>dtoverlay=w1-gpio,gpiopin=4</p></blockquote><p>添加完成之后我们重启raspberry</p><blockquote><p>sudo reboot</p></blockquote><p>重启完成之后我们需要进行/sys/bus/w1/devices目录</p><blockquote><p>cd /sys/bus/w1/devices</p></blockquote><p>通过调用ls命令，我们发现这个目录会有类似28-0416b3b833ff这样的一个目录，这个目录名称并是你传感器的ID，.在目录下面会有一个w1_slave文件，我们通过调用 cat命令可以读取到传感器的实时数据。</p><blockquote><p>cd 28-0416b3b833ff<br>ls<br>cat w1_slave</p></blockquote><p>完整的命令如下图所示<br>![屏幕快照 2017-05-29 下午10.42.01](<a href="http://7xrkms.com1.z0.glb.clouddn.com/屏幕快照" target="_blank" rel="noopener">http://7xrkms.com1.z0.glb.clouddn.com/屏幕快照</a> 2017-05-29 下午10.42.01.png)<br>其中t=30312是我实际测量到温度值，在上面的图中的温度为30.312度</p><p>同时我们可以利用python脚本来读取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gettemp</span><span class="params">(id)</span>:</span></span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    mytemp = <span class="string">''</span></span><br><span class="line">    filename = <span class="string">'w1_slave'</span></span><br><span class="line">    f = open(<span class="string">'/sys/bus/w1/devices/'</span> + id + <span class="string">'/'</span> + filename, <span class="string">'r'</span>)</span><br><span class="line">    line = f.readline() <span class="comment"># read 1st line</span></span><br><span class="line">    crc = line.rsplit(<span class="string">' '</span>,<span class="number">1</span>)</span><br><span class="line">    crc = crc[<span class="number">1</span>].replace(<span class="string">'\n'</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">if</span> crc==<span class="string">'YES'</span>:</span><br><span class="line">      line = f.readline() <span class="comment"># read 2nd line</span></span><br><span class="line">      mytemp = line.rsplit(<span class="string">'t='</span>,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      mytemp = <span class="number">99999</span></span><br><span class="line">    f.close()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> int(mytemp[<span class="number">1</span>])</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="number">99999</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Script has been called directly</span></span><br><span class="line">  id = <span class="string">'28-0416b3b833ff'</span></span><br><span class="line">  <span class="keyword">print</span> <span class="string">"Temp : "</span> + <span class="string">'&#123;:.3f&#125;'</span>.format(gettemp(id)/float(<span class="number">1000</span>))</span><br></pre></td></tr></table></figure><p>我们通过命令行调用，得到如类似下面的结果</p><p>![屏幕快照 2017-05-29 下午10.48.50](<a href="http://7xrkms.com1.z0.glb.clouddn.com/屏幕快照" target="_blank" rel="noopener">http://7xrkms.com1.z0.glb.clouddn.com/屏幕快照</a> 2017-05-29 下午10.48.50.png)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;raspberry 温度采集&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="raspberry" scheme="http://yoursite.com/tags/raspberry/"/>
    
  </entry>
  
  <entry>
    <title>ts 实现混合类</title>
    <link href="http://yoursite.com/2019/10/18/ts-%E5%AE%9E%E7%8E%B0%E6%B7%B7%E5%90%88%E7%B1%BB/"/>
    <id>http://yoursite.com/2019/10/18/ts-实现混合类/</id>
    <published>2019-10-18T07:05:47.000Z</published>
    <updated>2019-10-18T07:12:12.278Z</updated>
    
    <content type="html"><![CDATA[<p>ts混合类特性</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mammal</span></span>&#123;</span><br><span class="line">    breathe():string&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"I'm alive!"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WingedAnimal</span> </span>&#123;</span><br><span class="line">    fly() :string&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"I can fly!"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bat</span> <span class="title">implements</span> <span class="title">Mammal</span>,<span class="title">WingedAnimal</span></span>&#123;</span><br><span class="line">    breathe:<span class="function"><span class="params">()</span>=&gt;</span>string;</span><br><span class="line">    fly: <span class="function"><span class="params">()</span> =&gt;</span> string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">applyMixins</span>(<span class="params">derivedCtor:any,baseCtors:any[]</span>)</span>&#123;</span><br><span class="line">    baseCtors.forEach(<span class="function"><span class="params">baseCtor</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.getOwnPropertyNames(baseCtor.prototype).forEach(<span class="function"><span class="params">name</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(name!==<span class="string">'constructor'</span>)&#123;</span><br><span class="line">                derivedCtor.prototype[name]=baseCtor.prototype[name];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">applyMixins(Bat,[Mammal,WingedAnimal])</span><br><span class="line"><span class="keyword">var</span> bat=<span class="keyword">new</span> Bat();</span><br><span class="line"><span class="built_in">console</span>.log(bat.breathe());</span><br><span class="line"><span class="built_in">console</span>.log(bat.fly());</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ts混合类特性&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="typescript" scheme="http://yoursite.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>react-native-piliwy集成</title>
    <link href="http://yoursite.com/2018/01/09/react-native-piliwy%E9%9B%86%E6%88%90/"/>
    <id>http://yoursite.com/2018/01/09/react-native-piliwy集成/</id>
    <published>2018-01-09T07:56:22.000Z</published>
    <updated>2019-10-18T08:24:37.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="react-native-pili集成指南"><a href="#react-native-pili集成指南" class="headerlink" title="react-native-pili集成指南"></a>react-native-pili集成指南</h1><p>为了今天的演习我们需要新建一个名为live的项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">js react-native init live</span><br></pre></td></tr></table></figure><p>进入项目目录，调用下面的命令安装native-react-native插件</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install native-react-native --save</span><br></pre></td></tr></table></figure><p>进入项目目录下的ios目录，并且新建一个Podfile文件，并且写入下面的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">platform :ios, &apos;8.0&apos;</span><br><span class="line">target &apos;tvApp&apos; do</span><br><span class="line">pod &apos;yoga&apos;, path: &apos;../node_modules/react-native/ReactCommon/yoga/&apos;    </span><br><span class="line">pod &apos;React&apos;, path: &apos;../node_modules/react-native/&apos;    </span><br><span class="line">pod &apos;RCTPili&apos;, path: &apos;../node_modules/react-native-pili/ios/RCTPili/&apos;    </span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>执行以下命令进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><p>安装完成之后，我们通过xcode打开tv.xcodeproj,然后把ios/Pods录下 Pods.xcodeproj添加到 Libraries下</p><p><img src="09095110_z1Go.png" alt=""></p><p>执行上面的操作之后，我们还需要更改代码文件，替换如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//将下面的内容进行替换</span><br><span class="line">import React, &#123;</span><br><span class="line">    Component,PropTypes</span><br><span class="line">&#125; from &apos;react&apos;;</span><br><span class="line">替换成</span><br><span class="line">import &#123;PropTypes&#125; from &apos;prop-types&apos;</span><br></pre></td></tr></table></figure><p>我们利用香港卫视的源进行测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const Player=require(&apos;./Player&apos;);</span><br><span class="line">       &lt;Player source=&#123;&#123;</span><br><span class="line">          uri: &apos;rtmp://live.hkstv.hk.lxdns.com/live/hks&apos;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">          muted=&#123;false&#125; //iOS only</span><br><span class="line"></span><br><span class="line">          started=&#123;this.state.plaing&#125; //iOS only</span><br><span class="line">          style=&#123;styles.videoStyle&#125;</span><br><span class="line">          onLoading=&#123;() =&gt; &#123; &#125;&#125; //loading from remote or local</span><br><span class="line">          onPaused=&#123;() =&gt; &#123; &#125;&#125; //pause event</span><br><span class="line">          onShutdown=&#123;() =&gt; &#123; &#125;&#125; //stopped event</span><br><span class="line">          onError=&#123;() =&gt; &#123; &#125;&#125; //error event</span><br><span class="line">          onPlaying=&#123;() =&gt; &#123; &#125;&#125; //play event</span><br><span class="line">        /&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;react-native-pili集成指南&quot;&gt;&lt;a href=&quot;#react-native-pili集成指南&quot; class=&quot;headerlink&quot; title=&quot;react-native-pili集成指南&quot;&gt;&lt;/a&gt;react-native-pili集成指南&lt;/h1&gt;&lt;p&gt;为了今天的演习我们需要新建一个名为live的项目&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;js react-native init live&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;进入项目目录，调用下面的命令安装native-react-native插件&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>es6 模板字符串</title>
    <link href="http://yoursite.com/2017/07/27/es6-%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://yoursite.com/2017/07/27/es6-模板字符串/</id>
    <published>2017-07-27T02:02:14.000Z</published>
    <updated>2019-10-18T03:40:31.362Z</updated>
    
    <content type="html"><![CDATA[<p>es6 新的特殊支持嵌入表达式，自动会处于``内所有的字符串。</p><a id="more"></a><h3 id="多行字符串"><a href="#多行字符串" class="headerlink" title="多行字符串"></a>多行字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\\传统的多行字符串</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'string line1 \n\</span></span><br><span class="line"><span class="string">string line2'</span>)</span><br><span class="line">\\es6多行字符串</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`string line</span></span><br><span class="line"><span class="string">string lin2`</span>);</span><br></pre></td></tr></table></figure><h3 id="表达式插入"><a href="#表达式插入" class="headerlink" title="表达式插入"></a>表达式插入</h3><p>传统的方式采用的是字符串拼接的方式进行，通过+号进行拼接</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传统方式</span></span><br><span class="line"> <span class="keyword">let</span> x=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">let</span> y=<span class="number">2</span>;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'x='</span>+(a+b)+<span class="string">';y='</span>+(a*b))</span><br><span class="line"> <span class="comment">//es6 语法</span></span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'x='</span>+(a+b)+<span class="string">';y='</span>+(a*b));</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">`x=<span class="subst">$&#123;x+y&#125;</span>,y=<span class="subst">$&#123;x*y&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><h3 id="带标签的模板字符串"><a href="#带标签的模板字符串" class="headerlink" title="带标签的模板字符串"></a>带标签的模板字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//strings 存放所有的字符串字面的数组</span></span><br><span class="line"><span class="comment">//values 存放第一个数组紧随的参数</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">tag3</span>(<span class="params">strings,...values</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">let</span> a = <span class="number">5</span>;</span><br><span class="line">  <span class="keyword">let</span> b = <span class="number">10</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(strings[<span class="number">0</span>]);<span class="comment">//hello</span></span><br><span class="line">                <span class="built_in">console</span>.log(strings[<span class="number">1</span>]);<span class="comment">//world</span></span><br><span class="line">                <span class="built_in">console</span>.log(strings[<span class="number">2</span>]);<span class="comment">//</span></span><br><span class="line">                <span class="built_in">console</span>.log(values[<span class="number">0</span>]);<span class="comment">//15</span></span><br><span class="line">                <span class="built_in">console</span>.log(values[<span class="number">1</span>]);<span class="comment">//50</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">"hello world"</span></span><br><span class="line"> &#125;</span><br><span class="line">  tag3 <span class="string">`Hello <span class="subst">$&#123;a+b&#125;</span> world <span class="subst">$&#123; a*b &#125;</span>`</span>;</span><br><span class="line">  <span class="comment">//out:hello world</span></span><br></pre></td></tr></table></figure><p>通过传入的参数来返回一个函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">template</span>(<span class="params">strings,...keys</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="function"><span class="keyword">function</span>(<span class="params">...values</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> dict=values[values.length<span class="number">-1</span>]||&#123;&#125;;  <span class="comment">//A                 </span></span><br><span class="line"><span class="keyword">var</span> result=[strings[<span class="number">0</span>]];</span><br><span class="line">keys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key,i</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> value=<span class="built_in">Number</span>.isInteger(key)?values[key]:dict[key];              result.push(value,strings[i+<span class="number">1</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> result.join(<span class="string">' '</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> t1Closure=template <span class="string">`<span class="subst">$&#123;<span class="number">0</span>&#125;</span><span class="subst">$&#123;<span class="number">1</span>&#125;</span><span class="subst">$&#123;<span class="number">0</span>&#125;</span>!`</span>;<span class="comment">//返回的是一个函数</span></span><br><span class="line"><span class="built_in">console</span>.log(t1Closure(<span class="string">'Y'</span>,<span class="string">'A'</span>));<span class="comment">//Y A Y</span></span><br></pre></td></tr></table></figure><h3 id="不转义字符串"><a href="#不转义字符串" class="headerlink" title="不转义字符串"></a>不转义字符串</h3><p>在String.raw()输出不转义的字符串,输出原始的字符串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tag</span>(<span class="params">strings, ...values</span>) </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">倘若不采用raw输出的会直接进行换行 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  <span class="built_in">console</span>.log(strings.raw[<span class="number">0</span>]); </span><br><span class="line">  <span class="comment">// "string text line 1 \n string text line 2"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tag<span class="string">`string text line 1 \n string text line 2`</span>;</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否具有权限，倘若没有抛出一个异常</span></span><br><span class="line"><span class="comment">//$&#123;user.name&#125;和$&#123;action&#125;是两个点占位号，会自动将值带入到该字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">authorize</span>(<span class="params">user, action</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!user.hasPrivilege(action)) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(</span><br><span class="line">      <span class="string">`用户 <span class="subst">$&#123;user.name&#125;</span> 未被授权执行 <span class="subst">$&#123;action&#125;</span> 操作。`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;es6 新的特殊支持嵌入表达式，自动会处于``内所有的字符串。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>meteor 加载静态文件</title>
    <link href="http://yoursite.com/2017/07/27/meteor-%E5%8A%A0%E8%BD%BD%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/07/27/meteor-加载静态文件/</id>
    <published>2017-07-27T01:54:17.000Z</published>
    <updated>2019-10-18T04:50:46.119Z</updated>
    
    <content type="html"><![CDATA[<p>meteor 加载静态文件</p><a id="more"></a><h1 id="meteor-加载外部资源文件"><a href="#meteor-加载外部资源文件" class="headerlink" title="meteor 加载外部资源文件"></a>meteor 加载外部资源文件</h1><p>在很多时候开发的时候我们需要导入一些外部的数据到程序当中，这些数据可能存放在csv,XML.json之类的文件当中，我们就将其导入到程序当中，使其能够供全局进行访问。</p><p><strong>private/json/city.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"010"</span>,<span class="attr">"city"</span>:<span class="string">"北京"</span>, <span class="attr">"pinyin"</span>: <span class="string">"beijing"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"021"</span>,<span class="attr">"city"</span>:<span class="string">"上海"</span>, <span class="attr">"pinyin"</span>:<span class="string">"shanghai"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0571"</span>,<span class="attr">"city"</span>:<span class="string">"杭州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"hangzhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0574"</span>,<span class="attr">"city"</span>:<span class="string">"宁波"</span>, <span class="attr">"pinyin"</span>:<span class="string">"ningbo"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0573"</span>,<span class="attr">"city"</span>:<span class="string">"嘉兴"</span>, <span class="attr">"pinyin"</span>:<span class="string">"jiaxing"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0575"</span>,<span class="attr">"city"</span>:<span class="string">"绍兴"</span>, <span class="attr">"pinyin"</span>:<span class="string">"shaoxing"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0577"</span>,<span class="attr">"city"</span>:<span class="string">"温州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"wenzhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0580"</span>,<span class="attr">"city"</span>:<span class="string">"舟山"</span>, <span class="attr">"pinyin"</span>:<span class="string">"zhoushan"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0572"</span>,<span class="attr">"city"</span>:<span class="string">"湖州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"huzhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0579"</span>,<span class="attr">"city"</span>:<span class="string">"金华"</span>, <span class="attr">"pinyin"</span>:<span class="string">"jinhua"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0578"</span>,<span class="attr">"city"</span>:<span class="string">"丽水"</span>, <span class="attr">"pinyin"</span>:<span class="string">"lishui"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0576"</span>,<span class="attr">"city"</span>:<span class="string">"台州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"taizhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> &#123;<span class="attr">"code"</span>:<span class="string">"0570"</span>,<span class="attr">"city"</span>:<span class="string">"衢州"</span>, <span class="attr">"pinyin"</span>:<span class="string">"quzhou"</span>,<span class="attr">"province"</span>: <span class="string">"浙江"</span>&#125;,</span><br><span class="line"> ]</span><br></pre></td></tr></table></figure><blockquote><p>特殊注意是private文件夹的数据是不提供给客户端</p></blockquote><p>上面的是包含城市名称以及区号的json数据，我们将其保存在文件当中，这里我们可以通过Assets API来访问以及处理相应的数据。</p><p><strong>server/main.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Meteor &#125; <span class="keyword">from</span> <span class="string">'meteor/meteor'</span>;</span><br><span class="line"></span><br><span class="line">Meteor.startup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> cityList=<span class="built_in">JSON</span>.parse(Assets.getText(<span class="string">'json/city.json'</span>))</span><br><span class="line">  _.each(cityList, <span class="function"><span class="keyword">function</span>(<span class="params">city</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(city);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面的代码会将所有的数据进行输出，但是有的时候这些数据可以会被其他的项目需要，这里我们需要通过添加一个package来解决，同时我们只可以将这个包上传到<a href="https://atmospherejs.com" target="_blank" rel="noopener">atmospherejs</a><br>我们需要将之前的json文件移到cityjson包，最终的目录文件如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">└── cityjson</span><br><span class="line">    ├── README.md</span><br><span class="line">    ├── city.json</span><br><span class="line">    ├── cityjson-tests.js</span><br><span class="line">    ├── cityjson.js</span><br><span class="line">    └── package.js</span><br></pre></td></tr></table></figure><p><strong>package.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Package.describe(&#123;</span><br><span class="line">  name: <span class="string">'wenchangshou:cityjson'</span>,</span><br><span class="line">  version: <span class="string">'0.0.1'</span>,</span><br><span class="line">  <span class="comment">// Brief, one-line summary of the package.</span></span><br><span class="line">  summary: <span class="string">'获取国内的所有的城市名称以及区号'</span>,</span><br><span class="line">  <span class="comment">// URL to the Git repository containing the source code for this package.</span></span><br><span class="line">  git: <span class="string">''</span>,</span><br><span class="line">  <span class="comment">// By default, Meteor will default to using README.md for documentation.</span></span><br><span class="line">  <span class="comment">// To avoid submitting documentation, set this field to null.</span></span><br><span class="line">  documentation: <span class="string">'README.md'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Package.onUse(<span class="function"><span class="keyword">function</span> (<span class="params">api</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//  api.versionsFrom('1.4.2.7');</span></span><br><span class="line">  api.versionsFrom(<span class="string">'1.0'</span>)</span><br><span class="line">  api.export(<span class="string">'cityList'</span>, <span class="string">'server'</span>);</span><br><span class="line">  api.addAssets(<span class="string">'city.json'</span>, <span class="string">'server'</span>)</span><br><span class="line">  api.addFiles(<span class="string">'cityjson.js'</span>, <span class="string">'server'</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Package.onTest(<span class="function"><span class="keyword">function</span>(<span class="params">api</span>) </span>&#123;</span><br><span class="line">  api.use(<span class="string">'ecmascript'</span>);</span><br><span class="line">  api.use(<span class="string">'tinytest'</span>);</span><br><span class="line">  api.use(<span class="string">'wenchangshou:cityjson'</span>);</span><br><span class="line">  api.mainModule(<span class="string">'cityjson-tests.js'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>cityjson.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cityCollection=<span class="built_in">JSON</span>.parse(Assets.getText(<span class="string">'city.json'</span>));</span><br><span class="line">cityList=&#123;<span class="attr">city</span>:cityCollection&#125;</span><br></pre></td></tr></table></figure><ul><li>Assets.getText 可以从当前的包内进行调用 ，通过addFiles进行数据的暴露</li><li>之后我们需要读取以及解析数据，city里面包含了所有的城市信息，并且我们通过cityList这个全局变量进行数据的暴露</li><li>我们通过 api.addAssets将静态的文件导入到包中，通过Assets.getText进行访问</li></ul><h3 id="meteor-包上传"><a href="#meteor-包上传" class="headerlink" title="meteor 包上传"></a>meteor 包上传</h3><p>上面的操作我们已经创建了一个能够使用的包了，这时候我们需要将这个包上传，方便将来的使用</p><blockquote><p>meteor publish –create </p></blockquote><p>上传成功之后我们可以直接访问<a href="https://atmospherejs.com/wenchangshou/cityjson" target="_blank" rel="noopener">cityjson</a>来查看我们上传的包，如下图所示<br>![屏幕快照 2017-02-18 下午5.37.22](<a href="http://o7ez1faxc.bkt.clouddn.com/2017-02-18-屏幕快照" target="_blank" rel="noopener">http://o7ez1faxc.bkt.clouddn.com/2017-02-18-屏幕快照</a> 2017-02-18 下午5.37.22.png)</p><p>上传成功之后我们将pckages/cityjson目录删除</p><blockquote><p>rm -rf packages/cityjson</p></blockquote><p>我们在主目录当中添加我们上传的包,其中wenchangshou是我的用户名</p><blockquote><p>meteor add wenchangshou:cityjson</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;meteor 加载静态文件&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>typescript 实现状态模式</title>
    <link href="http://yoursite.com/2017/02/06/typescript-%E5%AE%9E%E7%8E%B0%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2017/02/06/typescript-实现状态模式/</id>
    <published>2017-02-06T08:37:36.000Z</published>
    <updated>2019-10-18T08:38:21.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="状态模式"><a href="#状态模式" class="headerlink" title="状态模式"></a>状态模式</h1><h3 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h3><p><img src="http://o7ez1faxc.bkt.clouddn.com/2017-02-06-14863882728801.jpg" alt=""></p><h3 id="初级版本"><a href="#初级版本" class="headerlink" title="初级版本"></a>初级版本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> enum State&#123;</span><br><span class="line">    SOLD_OUT=<span class="number">0</span>,<span class="comment">//糖果售完</span></span><br><span class="line">    NO_QUARTER=<span class="number">1</span>,<span class="comment">//没有硬币</span></span><br><span class="line">    HAS_QUARTER=<span class="number">2</span>,<span class="comment">//已有硬币</span></span><br><span class="line">    SOLD=<span class="number">3</span>,<span class="comment">//正在出糖果</span></span><br><span class="line">    WINNER=<span class="number">4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GumballMachine</span></span>&#123;</span><br><span class="line">    public state:State;</span><br><span class="line">    count:number;</span><br><span class="line">    public <span class="keyword">constructor</span>(count:number)&#123;</span><br><span class="line">        <span class="keyword">this</span>.state=State.SOLD</span><br><span class="line">        <span class="keyword">this</span>.count=count</span><br><span class="line">        <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.state=State.NO_QUARTER</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//插入硬币</span></span><br><span class="line">    public insertQuarter():<span class="keyword">void</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> currSte=<span class="keyword">this</span>.state</span><br><span class="line">        <span class="keyword">if</span>(currSte==State.HAS_QUARTER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'You can\'t insert another quarter'</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(currSte==State.NO_QUARTER)&#123;</span><br><span class="line">            <span class="keyword">this</span>.state=State.HAS_QUARTER</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'You inserted a quarter'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(currSte==State.SOLD_OUT)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'you can\'t insert a quarter,the machine is sold out'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(currSte==State.SOLD)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Please wait,we\'re already giving you a gumball'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(currSte==State.WINNER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Please wait,we\'re already giving you a gumball'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//退出硬币</span></span><br><span class="line">    public ejectQuarter():<span class="keyword">void</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> currSte=<span class="keyword">this</span>.state</span><br><span class="line">        <span class="keyword">if</span>(currSte==State.HAS_QUARTER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Quarter returned'</span>);</span><br><span class="line">            <span class="keyword">this</span>.state=State.NO_QUARTER</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(currSte==State.NO_QUARTER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'you haven\'t inserted a quarter'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(currSte==State.SOLD)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Sorry,you already turned the crank'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(currSte==State.WINNER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'you can\'t eject,you haven\'t inserted a quarter yet'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(currSte==State.SOLD_OUT)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'you can\'t eject,you haven\'t inserted a quarter yet'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//转动曲柄</span></span><br><span class="line">    public turnCrank():<span class="keyword">void</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.state===State.SOLD)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Turning twice doesn\'t get you another gumball!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state===State.NO_QUARTER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"you turned but there's no quarter"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state===State.SOLD_OUT)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"You turned,but there are no gumballs"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state===State.HAS_QUARTER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"you turned..."</span>)</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Math</span>.random()&gt;<span class="number">0.9</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.state=State.WINNER</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">this</span>.state=State.SOLD</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.dispense();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//弹出糖果</span></span><br><span class="line">    public dispense():<span class="keyword">void</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.SOLD)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"A gumball comes rolling out the slot"</span>);</span><br><span class="line">            <span class="keyword">this</span>.count-=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.count==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"Oops,out of gumballs!"</span>);</span><br><span class="line">                <span class="keyword">this</span>.state=State.SOLD_OUT</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.state=State.NO_QUARTER</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.WINNER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"two gumball comes rolling out the slot"</span>)</span><br><span class="line">            <span class="keyword">this</span>.count-=<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.count==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"Oops,out of gumballs!"</span>);</span><br><span class="line">                <span class="keyword">this</span>.state=State.SOLD_OUT</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.state=State.NO_QUARTER</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.NO_QUARTER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"You need to pay first"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.SOLD_OUT)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"No gumball dispensed"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.HAS_QUARTER)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"No gumball dispensed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public toString():any&#123;</span><br><span class="line">          <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.SOLD)&#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="string">"current State:SOLD"</span>+<span class="string">","</span>+<span class="string">"count:"</span>+<span class="keyword">this</span>.count</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.NO_QUARTER)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"current NO_QUARTER"</span>+<span class="string">","</span>+<span class="string">"count:"</span>+<span class="keyword">this</span>.count</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.SOLD_OUT)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"current SOLD_OUT"</span>+<span class="string">","</span>+<span class="string">"count:"</span>+<span class="keyword">this</span>.count</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.state==State.HAS_QUARTER)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"current HAS_QUARTER"</span>+<span class="string">","</span>+<span class="string">"count:"</span>+<span class="keyword">this</span>.count</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="keyword">let</span> gumballMachine:GumballMachine</span><br><span class="line">gumballMachine=<span class="keyword">new</span> GumballMachine(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">console</span>.log(gumballMachine.toString());</span><br><span class="line">gumballMachine.insertQuarter();</span><br><span class="line">gumballMachine.turnCrank();</span><br><span class="line"><span class="built_in">console</span>.log(gumballMachine.toString());</span><br><span class="line"></span><br><span class="line">gumballMachine.insertQuarter()</span><br><span class="line">gumballMachine.ejectQuarter()</span><br><span class="line">gumballMachine.turnCrank()</span><br><span class="line"><span class="built_in">console</span>.log(gumballMachine.toString());</span><br><span class="line"></span><br><span class="line">gumballMachine.insertQuarter()</span><br><span class="line">gumballMachine.turnCrank()</span><br><span class="line">gumballMachine.insertQuarter()</span><br><span class="line">gumballMachine.turnCrank()</span><br><span class="line">gumballMachine.ejectQuarter()</span><br><span class="line"><span class="built_in">console</span>.log(gumballMachine.toString());</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'------------------------'</span>);</span><br><span class="line"></span><br><span class="line">gumballMachine.insertQuarter()</span><br><span class="line">gumballMachine.insertQuarter()</span><br><span class="line">gumballMachine.turnCrank()</span><br><span class="line">gumballMachine.insertQuarter()</span><br><span class="line">gumballMachine.turnCrank()</span><br><span class="line">gumballMachine.insertQuarter()</span><br><span class="line">gumballMachine.turnCrank()</span><br><span class="line"><span class="built_in">console</span>.log(gumballMachine.toString());</span><br></pre></td></tr></table></figure><h3 id="改良版本"><a href="#改良版本" class="headerlink" title="改良版本"></a>改良版本</h3><p><img src="http://o7ez1faxc.bkt.clouddn.com/2017-02-06-14863884718479.jpg" alt=""></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">const enum State &#123;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    SOLD_OUT = 0,</span></span><br><span class="line"><span class="comment">    NO_QUARTER = 1,</span></span><br><span class="line"><span class="comment">    HAS_QUARTER = 2,</span></span><br><span class="line"><span class="comment">    SOLD = 3,</span></span><br><span class="line"><span class="comment">    WINNER = 4</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">interface</span> State &#123;</span><br><span class="line"></span><br><span class="line">    state: State;</span><br><span class="line">    count: <span class="built_in">number</span>;</span><br><span class="line">    insertQuarter(): <span class="built_in">void</span>;</span><br><span class="line">    ejectQuarter():<span class="built_in">void</span>;</span><br><span class="line">    turnCrank():<span class="built_in">void</span>;</span><br><span class="line">    dispense():<span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> SoldOutState <span class="keyword">implements</span> State&#123;</span><br><span class="line">    state:State;</span><br><span class="line">    count:<span class="built_in">number</span>;</span><br><span class="line">    gumballMachine:GumballMachine</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">gumballMachine:GumballMachine</span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine=gumballMachine</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> insertQuarter():<span class="built_in">void</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"You can't insert a quarter,the machine is sold out"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> ejectQuarter():<span class="built_in">void</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"You can't eject,you haven't inserted a quater yet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> turnCrank():<span class="built_in">void</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"you turned,but there are no gumballs"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> dispense():<span class="built_in">void</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"No gumball dispensed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> NoQuarterState <span class="keyword">implements</span> State &#123;</span><br><span class="line">    state: State</span><br><span class="line">    count: <span class="built_in">number</span>;</span><br><span class="line">    gumballMachine: GumballMachine</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">gumballMachine: GumballMachine</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine = gumballMachine</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> insertQuarter(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"You inserted a quarter"</span>);</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine.setState(<span class="keyword">this</span>.gumballMachine.getHasQuarterState());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> ejectQuarter() :<span class="built_in">void</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'you haven\'t inserted a quarter'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> turnCrank():<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"You turned,but there's no quarter"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> dispense():<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"You need to pay first"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> SoldState <span class="keyword">implements</span> State &#123;</span><br><span class="line">    state: State</span><br><span class="line">    count: <span class="built_in">number</span>;</span><br><span class="line">    gumballMachine: GumballMachine</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">gumballMachine: GumballMachine</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine=gumballMachine</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> insertQuarter(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Please wait,we're already giving you a gumball"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> ejectQuarter():<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Sorry,you already turned the crank"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> turnCrank():<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Turning twice doesn't get you another gumball!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> dispense():<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine.releaseBall();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.gumballMachine.getCount()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.gumballMachine.setState(<span class="keyword">this</span>.gumballMachine.getNoQuarterState());</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"oops,out of gumballs!"</span>);</span><br><span class="line">            <span class="keyword">this</span>.gumballMachine.setState(<span class="keyword">this</span>.gumballMachine.getSoldOutState());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> HasQuarterState <span class="keyword">implements</span> State &#123;</span><br><span class="line">    state: State</span><br><span class="line">    count: <span class="built_in">number</span>;</span><br><span class="line">    gumballMachine: GumballMachine</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">gumballMachine: GumballMachine</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine=gumballMachine</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"has quarter"</span>)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> insertQuarter(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"you can't insert another quarter"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> ejectQuarter():<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Quarter returned"</span>);</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine.setState(<span class="keyword">this</span>.gumballMachine.getNoQuarterState())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> turnCrank():<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"You turned..."</span>);</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine.setState(<span class="keyword">this</span>.gumballMachine.getSoldState())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> dispense():<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.gumballMachine.releaseBall();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.gumballMachine.getCount()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.gumballMachine.setState(<span class="keyword">this</span>.gumballMachine.getNoQuarterState());</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"oops,out of gumballs!"</span>);</span><br><span class="line">            <span class="keyword">this</span>.gumballMachine.setState(<span class="keyword">this</span>.gumballMachine.getSoldOutState());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> GumballMachine &#123;</span><br><span class="line">    soldOutState: State;</span><br><span class="line">    noQuarterState: State</span><br><span class="line">    hasQuarterState: State</span><br><span class="line">    soldState: State</span><br><span class="line">    state: State = <span class="keyword">this</span>.soldOutState</span><br><span class="line">    count: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">numberGumballs: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.noQuarterState = <span class="keyword">new</span> NoQuarterState(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">this</span>.soldOutState = <span class="keyword">new</span> SoldOutState(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">this</span>.hasQuarterState=<span class="keyword">new</span> HasQuarterState(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">this</span>.soldState=<span class="keyword">new</span> SoldState(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">this</span>.count=numberGumballs</span><br><span class="line">        <span class="keyword">if</span> (numberGumballs &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.state = <span class="keyword">this</span>.noQuarterState</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> insertQuarter(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.state.insertQuarter();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> turnCrank(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.state.turnCrank();</span><br><span class="line">        <span class="keyword">this</span>.state.dispense();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * setState</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> setState(state: State):<span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.state = state</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> releaseBall(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"A gumball comes rolling out the slot..."</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.count != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.count = <span class="keyword">this</span>.count - <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> getHasQuarterState(): State &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.hasQuarterState</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> getCount():<span class="built_in">number</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.count</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> getNoQuarterState():State&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.noQuarterState</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> getSoldOutState():State&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.soldOutState</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> getSoldState():State&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.soldState</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> toString():<span class="built_in">string</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.state+<span class="string">':'</span>+<span class="keyword">this</span>.count</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> gumballMachine</span><br><span class="line">gumballMachine=<span class="keyword">new</span> GumballMachine(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">console</span>.log(gumballMachine.toString());</span><br><span class="line"></span><br><span class="line">gumballMachine.insertQuarter();</span><br><span class="line">gumballMachine.turnCrank();</span><br><span class="line"><span class="built_in">console</span>.log(gumballMachine.toString());</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'-----------------------'</span>);</span><br><span class="line">gumballMachine.insertQuarter();</span><br><span class="line">gumballMachine.insertQuarter();</span><br><span class="line">gumballMachine.turnCrank();</span><br><span class="line">gumballMachine.insertQuarter();</span><br><span class="line">gumballMachine.turnCrank();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(gumballMachine.toString());</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;状态模式&quot;&gt;&lt;a href=&quot;#状态模式&quot; class=&quot;headerlink&quot; title=&quot;状态模式&quot;&gt;&lt;/a&gt;状态模式&lt;/h1&gt;&lt;h3 id=&quot;业务逻辑&quot;&gt;&lt;a href=&quot;#业务逻辑&quot; class=&quot;headerlink&quot; title=&quot;业务逻辑&quot;&gt;&lt;/a
      
    
    </summary>
    
    
    
      <category term="typescript" scheme="http://yoursite.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>ngrok平台搭建</title>
    <link href="http://yoursite.com/2016/12/26/ngrok%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2016/12/26/ngrok平台搭建/</id>
    <published>2016-12-26T06:55:27.000Z</published>
    <updated>2019-10-18T07:41:51.750Z</updated>
    
    <content type="html"><![CDATA[<p>通过vps来搭建一个ngrok的服务端来进行微信的开发</p><a id="more"></a><h1 id="ngrok-搭建"><a href="#ngrok-搭建" class="headerlink" title="ngrok 搭建"></a>ngrok 搭建</h1><p><img src="http://o7ez1faxc.bkt.clouddn.com/2016-11-13-14790419806988.jpg" alt=""></p><p>之前反向代理的功能一直使用其他人搭建的服务来进行微信的开发，但是最近一段时间特别的不稳定，正好手里还有一台空闲VPS和域名，所以就萌生自己搭建服务器的念头。</p><h2 id="编译-ngrok"><a href="#编译-ngrok" class="headerlink" title="编译 ngrok"></a>编译 ngrok</h2><p>我的系统是ubuntu 16.04 LTS版本的，在编译之前我们需要安装以下的工具</p><blockquote><p>sudo apt-get install build-essential golang mercurial git</p></blockquote><p>获取ngrok的源码</p><blockquote><p><a href="https://github.com/inconshreveable/ngrok.git" target="_blank" rel="noopener">https://github.com/inconshreveable/ngrok.git</a> ngrok<br>cd ngrok</p></blockquote><p>在使用之前特地注册了一个域名ngrokc.top来映射vps的IP，在编译的时候我们需要将证书替换成自己新生成的，在创建证书的时候需要将域名修改成自己注册的域名。(之后使用的过程当中会利用这个证书来进行数据的加密，来保证安全性。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">NGROK_DOMAIN=<span class="string">"ngrokc.top"</span></span><br><span class="line">openssl genrsa -out base.key 2048</span><br><span class="line">openssl req -new -x509 -nodes -key base.key -days 10000 -subj <span class="string">"/CN=<span class="variable">$NGROK_DOMAIN</span>"</span> -out base.pem</span><br><span class="line">openssl genrsa -out server.key 2048</span><br><span class="line">openssl req -new -key server.key -subj <span class="string">"/CN=<span class="variable">$NGROK_DOMAIN</span>"</span> -out server.csr</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crt</span><br><span class="line"></span><br><span class="line">cp base.pem assets/client/tls/ngrokroot.crt</span><br></pre></td></tr></table></figure><p>进行上面的操作之后，接下来我们就需要进行编译</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make release-server release-client</span><br></pre></td></tr></table></figure><p>操作完成之后在bin目录下面会产生二个可执行的文件ngrokc(服务端)和ngrok(客户端）程序</p><p>为了能够让自己的客户端运行在不同的平台上面，我们要根据自己要使用的平台来分别使用下面的某一项指令进行操作。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//生成windows客户端</span><br><span class="line"></span><br><span class="line">sudo GOOS=windows GOARCH=386 make release-client</span><br><span class="line"></span><br><span class="line">//生成Linux客户端</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo GOOS=linux GOARCH=amd64 make release-client</span><br><span class="line"></span><br><span class="line">//生成树莓派客户端</span><br><span class="line"></span><br><span class="line">sudo GOOS=linux GOARCH=arm make release-client</span><br></pre></td></tr></table></figure><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>前面生成的ngrokd就是服务端的程序，我们在运行时需要通过参数来指定证书、域名和端口</p><blockquote><p>sudo ./bin/ngrokd -tlsKey=server.key -tlsCrt=server.crt -domain=”ngrokc.top” -httpAddr=”:8081” -httpsAddr=”:8082”</p></blockquote><p>执行上而把操作之后，我们的服务端也正式启动起来了，可以通过观察屏幕来获得更多的信息。httpAddr、httpsAddr分别是ngokc用来转发http和https的端口，可以根据自己的需要随意更改。同时默认开了一个4443端口用来与客户端的通信。</p><p>现在我们可以通过 <a href="https://server.ngrokc.top:8081" target="_blank" rel="noopener">https://server.ngrokc.top:8081</a> 和 <a href="https://server.ngrokc.top:8082" target="_blank" rel="noopener">https://server.ngrokc.top:8082</a> 来访问转发的服务，倘若你在浏览器当中输入以上的任意域名会输出下面的语句，表示你的服务已正式启动。</p><blockquote><p>Tunnel server.ngrokc.top:8081 not found</p></blockquote><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>启动客户端通过可以采用两种方式</p><ol><li>直接通过参数的方式来指定需要映射的端口</li><li>通过配置文件方式来进行指定相应的端<br>下面是一个ngrok的配置文件，其中server_addr是指定ngrok服务端的地址和通讯的端口，同时我们也映射了两个tcp的端口。</li></ol><p>ngrok.cfg配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server_addr: ngrokc.top:4443</span><br><span class="line">trust_host_root_certs: false</span><br><span class="line"></span><br><span class="line">tunnels:</span><br><span class="line">  ssh:</span><br><span class="line">    subdomain: server</span><br><span class="line">    proto:</span><br><span class="line">      tcp: 22</span><br><span class="line">  aria2c:</span><br><span class="line">    subdomain: server</span><br><span class="line">    proto:</span><br><span class="line">      tcp: 6800</span><br></pre></td></tr></table></figure><p>启动方式</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#调用下面的语句会自动从服务端生成两个端口用来映射本地的22和6800端口</span></span><br><span class="line">./ngrok -config=ngrok.cfg start ssh aria2c</span><br></pre></td></tr></table></figure><h3 id="指定多个配置文件"><a href="#指定多个配置文件" class="headerlink" title="指定多个配置文件"></a>指定多个配置文件</h3><p>ngrok可以指定多个配置文件，同时将几个配置文件进行合并然后从第一个配置文件开始逐步进行映射。</p><blockquote><p>ngrok start -config ~/ngrok.yml -config ~/projects/example/ngrok.yml demo admin</p></blockquote><h3 id="启动全部的通道"><a href="#启动全部的通道" class="headerlink" title="启动全部的通道"></a>启动全部的通道</h3><p>ngrok可以指定–all和–none来指定启动全部的通道或者不启动任何通道。</p><blockquote><p>ngrok start –al #启动全部的通道<br>ngrok start –none #不启动任何的通道</p></blockquote><h2 id="示例配置文件"><a href="#示例配置文件" class="headerlink" title="示例配置文件"></a>示例配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">authtoken: 4nq9771bPxe8ctg7LKr_2ClH7Y15Zqe4bWLWF9p</span><br><span class="line">region: us</span><br><span class="line">console_ui: true</span><br><span class="line">compress_conn: false</span><br><span class="line">http_proxy: false</span><br><span class="line">inspect_db_size: 50000000</span><br><span class="line">log_level: info</span><br><span class="line">log_format: json</span><br><span class="line">log: /var/log/ngrok.log</span><br><span class="line">metadata: &apos;&#123;&quot;serial&quot;: &quot;00012xa-33rUtz9&quot;, &quot;comment&quot;: &quot;For customer alan@example.com&quot;&#125;&apos;</span><br><span class="line">root_cas: trusted</span><br><span class="line">socks5_proxy: &quot;socks5://localhost:9150&quot;</span><br><span class="line">update: true</span><br><span class="line">update_channel: stable</span><br><span class="line">web_addr: localhost:4040</span><br><span class="line">tunnels:</span><br><span class="line"> website:</span><br><span class="line">   addr: 8888</span><br><span class="line">   auth: bob:bobpassword</span><br><span class="line">   bind_tls: true</span><br><span class="line">   host_header: &quot;myapp.dev&quot;</span><br><span class="line">   inspect: false</span><br><span class="line">   proto: http</span><br><span class="line">   subdomain: myapp</span><br><span class="line"> </span><br><span class="line"> e2etls:</span><br><span class="line">   addr: 9000</span><br><span class="line">   proto: tls</span><br><span class="line">   hostname: myapp.example.com</span><br><span class="line">   crt: example.crt</span><br><span class="line">   key: example.key</span><br><span class="line"> </span><br><span class="line"> ssh-access:</span><br><span class="line">   addr: 22</span><br><span class="line">   proto: tcp</span><br><span class="line">   remote_addr: 1.tcp.ngrok.io:12345</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过vps来搭建一个ngrok的服务端来进行微信的开发&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>shell 动态进程守护</title>
    <link href="http://yoursite.com/2016/10/14/shell-%E5%8A%A8%E6%80%81%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4/"/>
    <id>http://yoursite.com/2016/10/14/shell-动态进程守护/</id>
    <published>2016-10-14T06:42:55.000Z</published>
    <updated>2019-10-18T07:38:57.242Z</updated>
    
    <content type="html"><![CDATA[<p>主要用于openwrt里面的进程守护的脚本，检测程序是否运行，程序不存在就运行相应的脚本</p><a id="more"></a><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">config general general</span><br><span class="line">    option enable 1</span><br><span class="line"></span><br><span class="line">config monitor</span><br><span class="line">    option name &apos;scplc&apos;</span><br><span class="line">    option enable 1</span><br><span class="line">    option pschkstr &apos;sc-serv plc&apos;</span><br><span class="line">    option type     &apos;application&apos;</span><br><span class="line">    option tmpfile &apos;/tmp/monitor/plc.mon&apos;</span><br><span class="line">    option mqttkey &apos;/app/mon/plc/status&apos;</span><br><span class="line">    option timeLimit 60 </span><br><span class="line">    option execcmd &apos;&apos;</span><br><span class="line"></span><br><span class="line">config monitor</span><br><span class="line">    option name &apos;scgpio&apos;</span><br><span class="line">    option enable 1</span><br><span class="line">    option pschkstr &apos;sc-serv gpio&apos;</span><br><span class="line">    option type     &apos;application&apos;</span><br><span class="line">    option tmpfile &apos;/tmp/monitor/gpio.mon&apos;</span><br><span class="line">    option mqttkey &apos;/app/mon/gpio/status&apos;</span><br><span class="line">    option timeLimit 60 </span><br><span class="line">    option execcmd &apos;&apos;</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line">flash=<span class="string">"0"</span></span><br><span class="line"><span class="literal">true</span>=<span class="string">"1"</span></span><br><span class="line"><span class="literal">false</span>=<span class="string">"0"</span>;</span><br><span class="line"><span class="built_in">disable</span>=<span class="string">"0"</span></span><br><span class="line"><span class="built_in">enable</span>=<span class="string">"1"</span></span><br><span class="line">configName=<span class="string">"scmonitor"</span></span><br><span class="line"><span class="function"><span class="title">printHelp</span></span>()&#123;</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"USAGE:"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-g &lt;monitor type&gt; get current moitor enable status "</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-l view current all montoir list"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-s &lt;monitorName&gt; &lt;monitorValue&gt; set monitor state"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-a autoManage "</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-e enable cron"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-d disable cron"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"add &lt;name&gt; &lt;enable&gt; &lt;pschkstr&gt; &lt;sevicename&gt; &lt;tmpfile&gt; &lt;mqttkey&gt; &lt;execcmd&gt; &lt;timeLimit&gt;"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"example:"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"check -l"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plc"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"pjlink"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"   check -g plc"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"current monitor state:0"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"   check -s plc 0"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#检测线程是否存在</span></span><br><span class="line"><span class="function"><span class="title">function_thread_check</span></span>()&#123;</span><br><span class="line"><span class="comment">#count= $&#123;ps |grep 'sc-serv plc' | grep -v 'grep' | wc -l&#125;</span></span><br><span class="line">count=$( ps | grep <span class="string">"$*"</span> | grep -v <span class="string">'grep'</span> | wc -l )</span><br><span class="line"><span class="keyword">if</span> [ 0 == <span class="variable">$count</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取当前所有模块的名称</span></span><br><span class="line"><span class="function"><span class="title">function_getMonitorList</span></span>()&#123;</span><br><span class="line">count=$(uci get <span class="variable">$configName</span>.general.count)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 0 <span class="variable">$count</span>);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">name=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].name)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#获取状态</span></span><br><span class="line"><span class="function"><span class="title">function_getMonitorStats</span></span>()&#123;</span><br><span class="line">    count=$(uci get <span class="variable">$configName</span>.general.count)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> $(seq 0 <span class="variable">$count</span>);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">name=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].name)</span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$name</span>"</span> == <span class="string">"<span class="variable">$1</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">            state=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].<span class="built_in">enable</span>)</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$1</span> stats is <span class="variable">$state</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#获取当前的时间差</span></span><br><span class="line"><span class="function"><span class="title">function_getTimeCompare</span></span>()&#123;</span><br><span class="line">currTime=$( date +%s)</span><br><span class="line">lastTime=<span class="variable">$1</span></span><br><span class="line"><span class="comment">#tmpTime= $("$currTime - $lastTime")</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $((<span class="variable">$currTime</span> - <span class="variable">$lastTime</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">function_setMonitorState</span></span>()&#123;</span><br><span class="line">count=$(uci get <span class="variable">$configName</span>.general.count)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 0 <span class="variable">$count</span>);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">name=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].name)</span><br><span class="line">        old_sate=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].<span class="built_in">enable</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$name</span>"</span> == <span class="string">"<span class="variable">$1</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">state=$(uci <span class="built_in">set</span> <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].<span class="built_in">enable</span>=<span class="variable">$2</span>)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span> set success"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动化处理流程</span></span><br><span class="line"><span class="function"><span class="title">function_autoManage</span></span>()&#123;</span><br><span class="line">count=$(uci get <span class="variable">$configName</span>.general.count)</span><br><span class="line">monitorState=$(uci get <span class="variable">$configName</span>.general.enable)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$monitorState</span> == <span class="string">"0"</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"current server monitor disable"</span></span><br><span class="line"><span class="built_in">return</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 0 <span class="variable">$count</span>);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">name=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].name)</span><br><span class="line">        psChkstr=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].pschkstr)</span><br><span class="line">tmpfile=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].tmpfile)</span><br><span class="line">        <span class="built_in">type</span>=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].<span class="built_in">type</span>)</span><br><span class="line">result=$(function_thread_check <span class="variable">$psChkstr</span>)</span><br><span class="line">MonitorStats=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].<span class="built_in">enable</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$MonitorStats</span>"</span> == <span class="string">"<span class="variable">$disable</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span>  <span class="variable">$name</span> current Current status is <span class="built_in">disable</span> </span><br><span class="line"><span class="built_in">continue</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$result</span>"</span> == <span class="string">"false"</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Services have been shut down, which is restarting"</span></span><br><span class="line"><span class="comment">#execCmd=$(uci get sc-monitor.@monitor[$i].execcmd)</span></span><br><span class="line">$(/etc/init.d/<span class="variable">$name</span> start)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">      <span class="keyword">if</span> [ <span class="variable">$type</span> == <span class="string">"application"</span> ]; <span class="keyword">then</span> <span class="comment">#application不做文件检测</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"<span class="variable">$name</span> Operating normally"</span></span><br><span class="line">          <span class="built_in">continue</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -e <span class="string">"<span class="variable">$tmpfile</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">$(/etc/init.d/<span class="variable">$name</span> stop)</span><br><span class="line">$(/etc/init.d/<span class="variable">$name</span> start)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"restart <span class="variable">$name</span> server"</span></span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">lastTime=$(cat <span class="variable">$tmpfile</span>)</span><br><span class="line">timeLimit=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].timeLimit)</span><br><span class="line">result=$(function_getTimeCompare <span class="variable">$lastTime</span> )</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$result</span>"</span> -gt <span class="string">"<span class="variable">$timeLimit</span>"</span> ]; <span class="keyword">then</span>  <span class="comment">#如果当前返回的值大于允许值</span></span><br><span class="line">$(rm -rf <span class="variable">$tmpfile</span>)</span><br><span class="line">$(/etc/init.d/<span class="variable">$name</span> stop)</span><br><span class="line">$(/etc/init.d/<span class="variable">$name</span> start)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$result</span> <span class="variable">$timeLimit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$name</span> Operating normally"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#移除服务</span></span><br><span class="line"><span class="function"><span class="title">function_removeMonitor</span></span>()&#123;</span><br><span class="line">MonitorName=<span class="variable">$1</span></span><br><span class="line">tmp=$(uci get <span class="variable">$configName</span>.general.count)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 0 <span class="variable">$tmp</span>);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">name=$(uci get <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>].name)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$name</span>"</span> == <span class="string">"<span class="variable">$MonitorName</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">count=$((  <span class="variable">$tmp</span> - 1 ))</span><br><span class="line">$(uci delete <span class="variable">$configName</span>.@monitor[<span class="variable">$i</span>])</span><br><span class="line">$(uci <span class="built_in">set</span> <span class="variable">$configName</span>.general.count=<span class="variable">$count</span>)</span><br><span class="line">$(uci commit <span class="variable">$configName</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">function_EnableCron</span></span>()&#123;</span><br><span class="line">$(uci <span class="built_in">set</span> <span class="variable">$configName</span>.general.enable=1)</span><br><span class="line">$(uci commit <span class="variable">$configName</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">function_DisableCron</span></span>()&#123;</span><br><span class="line">$(uci <span class="built_in">set</span> <span class="variable">$configName</span>.general.enable=1)</span><br><span class="line">$(uci commit <span class="variable">$configName</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[ <span class="string">"<span class="variable">$(cat /proc/uptime | awk -F. '&#123;print $1&#125;')</span>"</span> -gt 300 ] || <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">printHelp</span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"-s"</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [  <span class="string">"<span class="variable">$2</span>"</span> == <span class="string">""</span> ] || [ <span class="string">"<span class="variable">$3</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">function_setMonitorState <span class="variable">$2</span> <span class="variable">$3</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"add"</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$2</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plese input type"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$3</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plese input eanbled"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$4</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plese input pschkstr"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$5</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plese input sevicename "</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$6</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plese input tmpfile"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$7</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plese input mqttkey"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$8</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plese input execcmd"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$9</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"plese input timeLimit"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp=$(uci get <span class="variable">$configName</span>.general.count)</span><br><span class="line"><span class="comment">#$count=$(( $count + 1 ))</span></span><br><span class="line">count=$((  <span class="variable">$tmp</span> + 1 ))</span><br><span class="line"></span><br><span class="line">$(uci add <span class="variable">$configName</span> monitor)</span><br><span class="line">$(uci add_list <span class="variable">$configName</span>.@monitor[<span class="variable">$count</span>].name=<span class="string">"<span class="variable">$2</span>"</span>)</span><br><span class="line">$(uci add_list <span class="variable">$configName</span>.@monitor[<span class="variable">$count</span>].<span class="built_in">enable</span>=<span class="string">"<span class="variable">$3</span>"</span>)</span><br><span class="line">$(uci add_list <span class="variable">$configName</span>.@monitor[<span class="variable">$count</span>].pschkstr=<span class="string">"<span class="variable">$4</span>"</span>)</span><br><span class="line">$(uci add_list <span class="variable">$configName</span>.@monitor[<span class="variable">$count</span>].servicename=<span class="string">"<span class="variable">$5</span>"</span>)</span><br><span class="line">$(uci add_list <span class="variable">$configName</span>.@monitor[<span class="variable">$count</span>].tmpfile=<span class="string">"<span class="variable">$6</span>"</span>)</span><br><span class="line">$(uci add_list <span class="variable">$configName</span>.@monitor[<span class="variable">$count</span>].mqttkey=<span class="string">"<span class="variable">$7</span>"</span>)</span><br><span class="line">$(uci add_list <span class="variable">$configName</span>.@monitor[<span class="variable">$count</span>].execcmd=<span class="string">"<span class="variable">$8</span>"</span>)</span><br><span class="line">$(uci add_list <span class="variable">$configName</span>.@monitor[<span class="variable">$count</span>].timeLimit=<span class="string">"<span class="variable">$9</span>"</span>)</span><br><span class="line">$(uci <span class="built_in">set</span> <span class="variable">$configName</span>.general.count=<span class="variable">$count</span>)</span><br><span class="line">$(uci commit <span class="variable">$configName</span>)</span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> g:s:lear:d opt</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$opt</span>"</span> <span class="keyword">in</span></span><br><span class="line">g)</span><br><span class="line">function_getMonitorStats <span class="variable">$OPTARG</span></span><br><span class="line">;;</span><br><span class="line">e)</span><br><span class="line">function_EnableCron</span><br><span class="line">;;</span><br><span class="line">d)function_DisableCron</span><br><span class="line">;;</span><br><span class="line">l)</span><br><span class="line">function_getMonitorList</span><br><span class="line">;;</span><br><span class="line">r)</span><br><span class="line">function_removeMonitor <span class="variable">$OPTARG</span></span><br><span class="line">;;</span><br><span class="line">a)</span><br><span class="line">function_autoManage</span><br><span class="line">;;</span><br><span class="line">?)</span><br><span class="line">clear</span><br><span class="line">printHelp ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要用于openwrt里面的进程守护的脚本，检测程序是否运行，程序不存在就运行相应的脚本&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>scrapy 爬虫抓取v2ex的所有文章</title>
    <link href="http://yoursite.com/2016/05/26/scrapy-%E7%88%AC%E8%99%AB%E6%8A%93%E5%8F%96v2ex%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2016/05/26/scrapy-爬虫抓取v2ex的所有文章/</id>
    <published>2016-05-26T07:36:11.000Z</published>
    <updated>2019-10-18T07:38:34.772Z</updated>
    
    <content type="html"><![CDATA[<p>利用scrapy进行抓取v2ex的所有的文章，其中包含了基本的scrapy的用法，以及处理出现request 403错误的解决</p><a id="more"></a><h1 id="v2exScray"><a href="#v2exScray" class="headerlink" title="v2exScray"></a>v2exScray</h1><p>项目代码全部上传到<a href="https://github.com/wenchangshou2/v2exScray" target="_blank" rel="noopener">github</a><br>这个项目的作用是将v2ex的所有的文章全部爬取下来最终抓取到的内容如下图所示<br>![屏幕快照 2016-05-19 下午4.16.05](<a href="http://o7ez1faxc.bkt.clouddn.com/2016-05-19-屏幕快照" target="_blank" rel="noopener">http://o7ez1faxc.bkt.clouddn.com/2016-05-19-屏幕快照</a> 2016-05-19 下午4.16.05.png)</p><h2 id="文件的目录"><a href="#文件的目录" class="headerlink" title="文件的目录"></a>文件的目录</h2><p><img src="http://o7ez1faxc.bkt.clouddn.com/2016-05-19-%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-19%20%E4%B8%8B%E5%8D%883.57.30.png" alt="屏幕快照 2016-05-19 下午3.57.30"></p><h2 id="创建爬虫项目"><a href="#创建爬虫项目" class="headerlink" title="创建爬虫项目"></a>创建爬虫项目</h2><p>scrapy创建工程的方式特别的简单，只要在shell下面输入下面的语句<br>![屏幕快照 2016-05-19 下午5.01.30](<a href="http://o7ez1faxc.bkt.clouddn.com/2016-05-19-屏幕快照" target="_blank" rel="noopener">http://o7ez1faxc.bkt.clouddn.com/2016-05-19-屏幕快照</a> 2016-05-19 下午5.01.30.png)</p><p>执行成功之后会自动创建我们工程所需要的文件</p><p>![屏幕快照 2016-05-19 下午5.02.05](<a href="http://o7ez1faxc.bkt.clouddn.com/2016-05-19-屏幕快照" target="_blank" rel="noopener">http://o7ez1faxc.bkt.clouddn.com/2016-05-19-屏幕快照</a> 2016-05-19 下午5.02.05.png)</p><h2 id="解决403的错误"><a href="#解决403的错误" class="headerlink" title="解决403的错误"></a>解决403的错误</h2><p>在抓取的过程当中返回的都是403的错误，网站采用了防爬技术anti-web-crawling technique（Amazon所用),后来通过通过队列的形式随机更换user_aget来发送请求来解决这个问题</p><p>我们需要使用下面的rotate_useragent.py的代码来进行更换请求的头，同时需要在settings.py里面将DOWNLOADER_MIDDLEWARES的注释去掉并且进行更正成正确的引用 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line">    <span class="string">'v2ex.rotate_useragent.RotateUserAgentMiddleware'</span>: <span class="number">400</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>rotate_useragent.py文件的代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> scrapy.contrib.downloadermiddleware.useragent <span class="keyword">import</span> UserAgentMiddleware</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RotateUserAgentMiddleware</span><span class="params">(UserAgentMiddleware)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, user_agent=<span class="string">''</span>)</span>:</span></span><br><span class="line">        self.user_agent = user_agent</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span><span class="params">(self, request, spider)</span>:</span></span><br><span class="line">        <span class="comment">#这句话用于随机选择user-agent</span></span><br><span class="line">        ua = random.choice(self.user_agent_list)</span><br><span class="line">        <span class="keyword">if</span> ua:</span><br><span class="line">            request.headers.setdefault(<span class="string">'User-Agent'</span>, ua)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#the default user_agent_list composes chrome,I E,firefox,Mozilla,opera,netscape</span></span><br><span class="line">    <span class="comment">#for more user agent strings,you can find it in http://www.useragentstring.com/pages/useragentstring.php</span></span><br><span class="line">    user_agent_list = [\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"</span>\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKithttp://o7ez1faxc.bkt.clouddn.com/2016-05-19-%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-19%20%E4%B8%8B%E5%8D%884.16.05.png/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span>,\</span><br><span class="line">        <span class="string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span></span><br><span class="line">       ]</span><br></pre></td></tr></table></figure><p>I## items配置<br>items.py里面定义了我们需要爬取的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Item,Field</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TencentItem</span><span class="params">(Item)</span>:</span></span><br><span class="line">    title=Field() <span class="comment">#文档标题</span></span><br><span class="line">    url=Field()  <span class="comment">#文章的链接</span></span><br></pre></td></tr></table></figure><h2 id="最终元素的保存"><a href="#最终元素的保存" class="headerlink" title="最终元素的保存"></a>最终元素的保存</h2><p>在scrapy里面会有一个piplines.py文章，爬虫会将抓取到的元素调用这个文件里面的函数进行存储</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonWithEncodingTencentPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.file = codecs.open(<span class="string">'v2ex.json'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>)<span class="comment">#设置encoding来防止乱码</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        line = json.dumps(dict(item), ensure_ascii=<span class="literal">False</span>) + <span class="string">"\n"</span><span class="comment">#ensure_ascii为true的话输出的是一个ascii字符，想输出中文的话需要将其设置为False</span></span><br><span class="line">        self.file.write(line)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">spider_closed</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        self.file.close(</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="爬虫的代码"><a href="#爬虫的代码" class="headerlink" title="爬虫的代码"></a>爬虫的代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rules = [</span><br><span class="line">       Rule(</span><br><span class="line">           sle(allow=(<span class="string">"recent\?p=\d&#123;1,5&#125;"</span>)), follow=<span class="literal">True</span>, callback=<span class="string">'parse_item'</span>)</span><br><span class="line">   ]</span><br></pre></td></tr></table></figure><p>下面是rule的源代码,当flollow为True的时候会自动调用 callback的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> follow <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    self.follow = <span class="literal">False</span> <span class="keyword">if</span> callback <span class="keyword">else</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    self.follow = follow</span><br></pre></td></tr></table></figure><p>下面的是一篇文章的html的标记,我们现在需要取出所有div中class为’cell item’的元素，然后进行遍历<br>然后再分别取出item_title的text和href的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cell item"</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"48"</span> <span class="attr">valign</span>=<span class="string">"top"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>[</span><br><span class="line">![](//cdn.v2ex.co/avatar/2dff/59fb/128998_normal.png?m=1446796863)](/member/jiangew)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"auto"</span> <span class="attr">valign</span>=<span class="string">"middle"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"item_title"</span>&gt;</span>[</span><br><span class="line">跳槽季：北京~Java~4 年~服务端码农](/t/279762#reply6)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sep5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"small fade"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"votes"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>[</span><br><span class="line">Java](/go/java)  **[jiangew](/member/jiangew)** 2 分钟前  最后回复来自</span><br><span class="line">**[feiyang21687](/member/feiyang21687)**<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"70"</span> <span class="attr">align</span>=<span class="string">"right"</span> <span class="attr">valign</span>=<span class="string">"middle"</span>&gt;</span></span><br><span class="line">[6](/t/279762#reply6)</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>获取内容的代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sites_even = sel.css(<span class="string">'div.cell.item'</span>)</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> site <span class="keyword">in</span> sites_even:</span><br><span class="line">           item=TencentItem()</span><br><span class="line">           item[<span class="string">'title'</span>]=site.css(<span class="string">'.item_title a'</span>).xpath(<span class="string">'text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">           item[<span class="string">'url'</span>]=<span class="string">'http://v2ex.com'</span>+site.css(<span class="string">'.item_title a'</span>).xpath(<span class="string">'@href'</span>).extract()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">           items.append(item)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用scrapy进行抓取v2ex的所有的文章，其中包含了基本的scrapy的用法，以及处理出现request 403错误的解决&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>c++ 11 多线程处理（1）</title>
    <link href="http://yoursite.com/2015/07/27/c-11-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A4%84%E7%90%86%EF%BC%881%EF%BC%89/"/>
    <id>http://yoursite.com/2015/07/27/c-11-多线程处理（1）/</id>
    <published>2015-07-27T02:03:28.000Z</published>
    <updated>2019-10-18T07:43:16.060Z</updated>
    
    <content type="html"><![CDATA[<p>c++标准库中的多线程处理</p><a id="more"></a><h1 id="几种线程的方式"><a href="#几种线程的方式" class="headerlink" title="几种线程的方式"></a>几种线程的方式</h1><h2 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h2><h3 id="通过函数指针来创建一个线程"><a href="#通过函数指针来创建一个线程" class="headerlink" title="通过函数指针来创建一个线程"></a>通过函数指针来创建一个线程</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">thread_function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread function Executing"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadobj</span><span class="params">(thread_function)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Display From MainTHread"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    threadobj.join();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Exit of Main function"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用函数对象创建一个线程"><a href="#使用函数对象创建一个线程" class="headerlink" title="使用函数对象创建一个线程"></a>使用函数对象创建一个线程</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DisplayThread</span>&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">                <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Display Thread executing"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadobj</span><span class="params">((DisplayThread()))</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Display from main thread"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Waiting for thread to complete"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    threadobj.join();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Exiting from main thread"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-匿名函数来创建线程"><a href="#使用-匿名函数来创建线程" class="headerlink" title="使用 匿名函数来创建线程"></a>使用 匿名函数来创建线程</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj</span><span class="params">([]&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Display thread executeing"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span></span></span><br><span class="line"><span class="function"><span class="params">            &#125;)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Display from main thread"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    threadObj.join();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Exiting from Main Thread"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不同线程之间的区别"><a href="#不同线程之间的区别" class="headerlink" title="不同线程之间的区别"></a>不同线程之间的区别</h3><p>第一个线程都会有一个ID<br>成员函数指定关联线程对象的ID<br><strong>std::thread::get_id()</strong><br>给出当前函数的标识符<br><strong>std::this_thread::get_id()</strong></p><p>如果std::thread 对象没有任何关联的线程，get_id会返回一个默认的构造的std::thread::id对象<br>std::thread::id是一个对象，可以比较和输出<br><strong>示例代码</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">thread_function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Inside Thread :: ID="</span>&lt;&lt;<span class="built_in">std</span>::this_thread::get_id()&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj1</span><span class="params">(thread_function)</span></span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj2</span><span class="params">(thread_function)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(threadObj1.get_id()!=threadObj2.get_id())</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"BOth threads have diferent IDs"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"From Main thread :: id of thread 1="</span>&lt;&lt;threadObj1.get_id()&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"From Main thread :: id of thread 2="</span>&lt;&lt;threadObj2.get_id()&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加入和分离线程"><a href="#加入和分离线程" class="headerlink" title="加入和分离线程"></a>加入和分离线程</h2><p><strong>joining 线程</strong><br>一旦线程开始启动之后，其他的线程可以等待这个新的线程完成。等到其他的线程调用 join()函数</p><p>std::thread th(funPtr);<br>th.join()<br>我们来看一个示例<br>假设主线程已经启动了10个线程，直到所有的线程结束之后再退出。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkerThread</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Worker Thread "</span>&lt;&lt;<span class="built_in">std</span>::this_thread::get_id()&lt;&lt;<span class="string">" is Executing "</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::thread&gt; threadList;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        threadList.push_back(<span class="built_in">std</span>::thread(WorkerThread()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"等待所有的工作线程完成"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::for_each(threadList.begin(),threadList.end(),<span class="built_in">std</span>::mem_fn(&amp;<span class="built_in">std</span>::thread::join));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"退出主线程"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分离线程</strong><br>分享之后的线程也称做后台进程。分离一个线程我们需要调用 std::detach()函数</p><blockquote></blockquote><p>std::thread th(funcPtr);<br>th.detach();</p><p>一旦分享之后并不会再跟主线程关联<br><strong>所以我们需要小心的使用detach()和join() 避免出现不可预知的问题</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkerThread</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Worker Thread "</span>&lt;&lt;<span class="built_in">std</span>::this_thread::get_id()&lt;&lt;<span class="string">" is Executing "</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj</span><span class="params">((WorkerThread()))</span></span>;</span><br><span class="line">    <span class="keyword">if</span> ( threadObj.joinable() )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Detaching Thread "</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        threadObj.detach();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( threadObj.joinable() )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Detaching Thread "</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        threadObj.detach();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj2</span><span class="params">((WorkerThread()))</span></span>;</span><br><span class="line">    <span class="keyword">if</span> ( threadObj2.joinable() )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Detaching Thread "</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        threadObj2.detach();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( threadObj2.joinable() )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Detaching Thread "</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        threadObj2.detach();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadRAII</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">std</span>::thread &amp; m_thread;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        ThreadRAII(<span class="built_in">std</span>::thread  &amp; threadObj) : m_thread(threadObj)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        ~ThreadRAII()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 判断线程是否可被分离</span></span><br><span class="line">            <span class="keyword">if</span>(m_thread.joinable())</span><br><span class="line">            &#123;</span><br><span class="line">                m_thread.detach();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">thread_function</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++)</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"thread_function Executing"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj</span><span class="params">(thread_function)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果我们注释这行程序并会崩溃</span></span><br><span class="line">    <span class="function">ThreadRAII <span class="title">wrapperObj</span><span class="params">(threadObj)</span></span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="传递参数给线程"><a href="#传递参数给线程" class="headerlink" title="传递参数给线程"></a>传递参数给线程</h2><p>其中chrono原是boost的一个时间处理的库，现已成为c++ 11的标准了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newThreadCallback</span><span class="params">(<span class="keyword">int</span> *p)</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Inside Thread :"</span><span class="string">":p="</span>&lt;&lt;p&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::chrono::<span class="function">milliseconds <span class="title">dura</span><span class="params">(<span class="number">10000</span>)</span></span>;</span><br><span class="line">    <span class="built_in">std</span>::this_thread::sleep_for(dura);</span><br><span class="line">    *p=<span class="number">19</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startNewThtread</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Inside Main Thread:"</span><span class="string">":i= "</span>&lt;&lt;i&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">t</span><span class="params">(newThreadCallback,&amp;i)</span></span>;</span><br><span class="line">    t.detach();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Inside Main Thread : "</span><span class="string">": i="</span>&lt;&lt;i&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    startNewThtread();</span><br><span class="line">    <span class="built_in">std</span>::chrono::<span class="function">milliseconds <span class="title">dura</span><span class="params">(<span class="number">2000</span>)</span></span>;</span><br><span class="line">    <span class="built_in">std</span>::this_thread::sleep_for(dura);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有的时候我们需要注意的是，当你将一个对象的指针传递给一个线程时，而这个对象可能在传递的线程之外被删除，那么该线程再次访问的时候会出现段错误。比如说下面的这段程序<br><img src="http://o7ez1faxc.bkt.clouddn.com/2016-07-07-14679022487444.jpg" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newThreadCallback</span><span class="params">(<span class="keyword">int</span>* p)</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"inside Thread :"</span><span class="string">":p="</span>&lt;&lt;p&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::chrono::<span class="function">milliseconds <span class="title">dura</span><span class="params">(<span class="number">1000</span>)</span></span>;</span><br><span class="line">    <span class="built_in">std</span>::this_thread::sleep_for(dura);</span><br><span class="line">    *p=<span class="number">19</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startNewThread</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *p=<span class="keyword">new</span> <span class="keyword">int</span>();</span><br><span class="line">    *p=<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Inside Main Thread:"</span><span class="string">":*p="</span>&lt;&lt;*p&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">t</span><span class="params">(newThreadCallback,p)</span></span>;</span><br><span class="line">    t.detach();</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">    p=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    startNewThread();</span><br><span class="line">    <span class="built_in">std</span>::chrono::<span class="function">milliseconds <span class="title">dura</span><span class="params">(<span class="number">2000</span>)</span></span>;</span><br><span class="line">    <span class="built_in">std</span>::this_thread::sleep_for(dura);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="给线程传递一个形参"><a href="#给线程传递一个形参" class="headerlink" title="给线程传递一个形参"></a>给线程传递一个形参</h2><p>有的时候我们需要在程序中将某一些对象添加到某一线程的堆栈当中，一旦在线程里面更新并可以同步到主线程当中。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">threadCallback</span><span class="params">(<span class="keyword">int</span> <span class="keyword">const</span> &amp; x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> &amp;y=<span class="keyword">const_cast</span>&lt;<span class="keyword">int</span> &amp;&gt;(x);</span><br><span class="line">    y++;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Inside Thread x="</span>&lt;&lt;x&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"In main thread :before thread start x ="</span>&lt;&lt;x&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj</span><span class="params">(threadCallback,x)</span></span>;</span><br><span class="line">    threadObj.join();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"In main thread : after thread joins x="</span>&lt;&lt;x&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出</strong><br>In main thread :before thread start x =9<br>Inside Thread x=10<br>In main thread : after thread joins x=9</p><p>上面的程序看似threadCallback接收一个形参，在传递给threadCallback的时候线程会复制一个临时的值，更改该值并不影响外面的变量</p><p>倘若我们需要实际在线程里面改变外部的值，需要通过std::ref()的方式来传递值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">threadCallback</span><span class="params">(<span class="keyword">int</span> <span class="keyword">const</span> &amp; x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> &amp;y=<span class="keyword">const_cast</span>&lt;<span class="keyword">int</span> &amp;&gt;(x);</span><br><span class="line">    y++;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Inside thread x ="</span>&lt;&lt;x&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"in main thread:before thread start x="</span>&lt;&lt;x&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj</span><span class="params">(threadCallback,<span class="built_in">std</span>::ref(x))</span></span>;</span><br><span class="line">    threadObj.join();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"In Main Thread :After thread joins x ="</span>&lt;&lt;x&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出：</strong><br>in main thread:before thread start x=9<br>Inside thread x =10<br>In Main Thread :After thread joins x =10</p><h2 id="实现一个线程类的功能"><a href="#实现一个线程类的功能" class="headerlink" title="实现一个线程类的功能"></a>实现一个线程类的功能</h2><p>在创建的thread的时候其中第一项传递的是成员函数做为线程的回调函数，而第二项传递的是操作的对象。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DummyClass</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    DummyClass()</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    DummyClass(<span class="keyword">const</span> DummyClass &amp; obj)</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sampleMemberFunction</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"Inside sampleMemberFunction "</span>&lt;&lt;x&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    DummyClass dummyObj;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">thread <span class="title">threadObj</span><span class="params">(&amp;DummyClass::sampleMemberFunction,&amp;dummyObj, x)</span></span>;</span><br><span class="line">    threadObj.join();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;c++标准库中的多线程处理&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
  </entry>
  
</feed>
